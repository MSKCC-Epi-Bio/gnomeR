[{"path":[]},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement karissa.whiting@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Margaret Hannum Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Processing Data with {gnomeR}","text":"vignette walk data example show available {gnomeR} data processing, visualization analysis functions. also outline {gnomeR} helper functions use encounter common pitfalls format inconsistencies working mutation, CNA structural variant data.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"setting-up","dir":"Articles","previous_headings":"","what":"Setting up","title":"Processing Data with {gnomeR}","text":"Make sure {gnomeR} installed & loaded. use dplyr purposes vignette well. demonstrate {gnomeR} functions, using random sample 200 patients publicly available prostate cancer study retrieved cBioPortal. Data mutations, CNA, structural variants patients available gnomeR package (gnomeR::mutations, gnomeR::cna, gnomeR::sv). Note: access data cBioPortal, can use {cbioportalR} package: https://github.com/karissawhiting/cbioportalR.","code":"library(gnomeR) library(dplyr)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"data-formats","dir":"Articles","previous_headings":"","what":"Data Formats","title":"Processing Data with {gnomeR}","text":"Mutation, CNA, structural variant (also called fusion) data may formatted differently depending source . outline differences may encounter downloading data cBioPortal website versus pulling via cBioPortal API, review important/required columns . Example data package pulled using API. See cBioPortal documentation details different file formats supported cBioPortal, data schema coding.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"mutation-data","dir":"Articles","previous_headings":"Data Formats","what":"Mutation Data","title":"Processing Data with {gnomeR}","text":"common mutation data format Mutation Annotation Format (MAF) created part Cancer Genome Atlas (TCGA) project. row MAF file represents unique gene specified sample, therefore usually several rows per sample. use MAF files, need minimum sample ID column hugo symbol column, though often additional information like mutation type location also necessary. MAF formats fairly consistent across sources, however download raw data study cBioPortal using interactive download button might notice differences variables names comparison data imported API. instance, web-downloaded MAF names left API-downloaded MAF names right: variables named differently well differences intuitive. can refer gnomeR::names_df information possible MAF variable names. Luckily, {gnomeR} functions use data dictionary gnomeR::names_df automatically recognize common MAF variable names turn clean, snakecase names resulting dataframes. example: can see, variables, linkMsa, transformed used {gnomeR} functions.","code":"* `Tumor_Sample_Barcode` is called `sampleId`  * `Hugo_symbol` is called `hugoGeneSymbol`  * `Variant_Classification` is called `mutationType` * `HGVSp_Short` is called `proteinChange` * `Chromosome` is called 'chr' gnomeR::mutations %>% names() #>  [1] \"hugoGeneSymbol\"        \"entrezGeneId\"          \"uniqueSampleKey\"       #>  [4] \"uniquePatientKey\"      \"molecularProfileId\"    \"sampleId\"              #>  [7] \"patientId\"             \"studyId\"               \"center\"                #> [10] \"mutationStatus\"        \"validationStatus\"      \"startPosition\"         #> [13] \"endPosition\"           \"referenceAllele\"       \"proteinChange\"         #> [16] \"mutationType\"          \"functionalImpactScore\" \"fisValue\"              #> [19] \"linkXvar\"              \"linkPdb\"               \"linkMsa\"               #> [22] \"ncbiBuild\"             \"variantType\"           \"keyword\"               #> [25] \"chr\"                   \"variantAllele\"         \"refseqMrnaId\"          #> [28] \"proteinPosStart\"       \"proteinPosEnd\" rename_columns(gnomeR::mutations) %>% names() #>  [1] \"hugo_symbol\"            \"entrez_gene_id\"         \"uniqueSampleKey\"        #>  [4] \"uniquePatientKey\"       \"molecular_profile_id\"   \"sample_id\"              #>  [7] \"patient_id\"             \"study_id\"               \"center\"                 #> [10] \"mutation_status\"        \"validation_status\"      \"start_position\"         #> [13] \"end_position\"           \"reference_allele\"       \"hgv_sp_short\"           #> [16] \"variant_classification\" \"functionalImpactScore\"  \"fisValue\"               #> [19] \"linkXvar\"               \"linkPdb\"                \"linkMsa\"                #> [22] \"ncbi_build\"             \"variant_type\"           \"keyword\"                #> [25] \"chromosome\"             \"allele\"                 \"refseqMrnaId\"           #> [28] \"protein_pos_start\"      \"protein_pos_end\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"cna-data","dir":"Articles","previous_headings":"Data Formats","what":"CNA data","title":"Processing Data with {gnomeR}","text":"discrete copy number data cBioPortal contains values derived copy-number analysis algorithms like GISTIC 2.0 RAE. CNA data often presented long wide format: Long-format - row CNA event given gene sample, therefore samples often multiple rows. common format receive downloading data using API. Wide-format - Organized one column per sample one row per gene. Thus, sample’s events contained within one column. common format receive downloading data cBioPortal web browser. {gnomeR} features two helper functions easily pivot wide- long-format vice-versa. functions also relabel CNA levels (numeric values) characters shown : {gnomeR} automatically checks CNA data labels recodes needed within functions. can also use recode_cna() function pivoting unnecessary:","code":"gnomeR::cna[1:6, ] #> # A tibble: 6 × 9 #>   hugoGeneSymbol entrezGeneId uniqueSampleKey                   uniquePatientKey #>   <chr>                 <int> <chr>                             <chr>            #> 1 PTPRS                  5802 UC0wMDAxODU5LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODU5OnB… #> 2 AR                      367 UC0wMDAxODU5LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODU5OnB… #> 3 PIK3R1                 5295 UC0wMDAyMzA0LVQwMS1JTTM6cHJhZF9t… UC0wMDAyMzA0OnB… #> 4 AR                      367 UC0wMDAzOTI1LVQwMS1JTTM6cHJhZF9t… UC0wMDAzOTI1OnB… #> 5 PTEN                   5728 UC0wMDAwODI4LVQwMi1JTTM6cHJhZF9t… UC0wMDAwODI4OnB… #> 6 B2M                     567 UC0wMDAwODI4LVQwMi1JTTM6cHJhZF9t… UC0wMDAwODI4OnB… #> # ℹ 5 more variables: molecularProfileId <chr>, sampleId <chr>, #> #   patientId <chr>, studyId <chr>, alteration <int> gnomeR::cna_wide[1:6, 1:6] #>   Hugo_Symbol P-0070637-T01-IM7 P-0042589-T01-IM6 P-0026544-T01-IM6 #> 1       SMAD4                 0                 0                -2 #> 2       CCND1                 0                 0                 0 #> 3         MYC                 0                 0                 0 #> 4        FGF4                 0                 0                 0 #> 5        FGF3                 0                 0                 0 #> 6       FGF19                 0                 0                 0 #>   P-0032011-T01-IM6 P-0049337-T01-IM6 #> 1                 0                 0 #> 2                 0                 2 #> 3                 0                 2 #> 4                 0                 2 #> 5                 0                 2 #> 6                 0                 2 pivot_cna_wider(rename_columns(gnomeR::cna)) pivot_cna_longer(gnomeR::cna_wide) gnomeR::cna %>%   mutate(alteration_recoded = recode_cna(alteration))%>%   select(hugoGeneSymbol, sampleId, alteration, alteration_recoded)%>%   head()"},{"path":[]},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"process-data-with-create_gene_binary","dir":"Articles","previous_headings":"Preparing Data For Analysis","what":"Process Data with create_gene_binary()","title":"Processing Data with {gnomeR}","text":"Often first step analyzing genomic data organizing event matrix. matrix one row sample cohort one column type genomic event. cell take value 0 (event gene/sample), 1 (event gene/sample) NA (missing data gene tested panel). create_gene_binary() function helps process data format use downstream analysis. can create_gene_binary() single type data (mutation, CNA fusion): can process several types alterations single matrix. Supported data types : mutations copy number amplifications copy number deletions gene fusions datasets long-format. processing multiple types alteration data, default separate column type alteration gene. example, TP53 gene 4 columns: TP53 (mutation), TP53.Amp (amplification), TP53.Del (deletion), TP53.fus (structural variant). , events observed within data set type alteration (let’s say TP53 mutations TP53 amplifications), columns zeros excluded. example, colnames(all_bin) , least one ERG.fus event, ERG mutation events. Note use samples argument. allows specify exactly samples resulting data frame. argument allows retain samples genetic events row 0 NA. specify samples within sample cohort, rows alterations excluded final matrix. Notes helpful create_gene_binary() arguments: mut_type- default, germline mutations omitted data often incomplete, can choose leave needed. specify_panel- working across set samples sequenced several different gene panels, argument insert NAs genes weren’t tested given sample. can pass string \"impact\" indicating automatically guessing panels processsing IMPACT samples based ID, can pass data frame columns sample_id gene_panel fine grained control NA annotation. recode_aliases - Sometimes genes several accepted names change names time. can issue genes coded multiple names studies, working across studies. default, function search aliases genes data set resolved current common name.","code":"create_gene_binary(mutation = gnomeR::mutations)[1:6, 1:6] #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix. #> # A tibble: 6 × 6 #>   sample_id         PARP1  AKT1   ALK   APC    AR #>   <chr>             <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 P-0001128-T01-IM3     1     1     0     0     0 #> 2 P-0001859-T01-IM3     1     0     0     1     0 #> 3 P-0001895-T01-IM3     1     0     1     0     0 #> 4 P-0001845-T01-IM3     0     1     0     0     0 #> 5 P-0005570-T01-IM5     0     1     0     0     0 #> 6 P-0001768-T01-IM3     0     0     1     0     0 samples <- unique(gnomeR::mutations$sampleId)[1:10]  all_bin <- create_gene_binary(     samples = samples,     mutation = gnomeR::mutations,     cna = gnomeR::cna,     fusion = gnomeR::sv ) #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix.  all_bin[1:6, 1:6] #> # A tibble: 6 × 6 #>   sample_id         PARP1  AKT1   ALK   APC BRCA2 #>   <chr>             <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 P-0001128-T01-IM3     1     1     0     0     1 #> 2 P-0001859-T01-IM3     1     0     0     1     0 #> 3 P-0001895-T01-IM3     1     0     1     0     0 #> 4 P-0001845-T01-IM3     0     1     0     0     0 #> 5 P-0005570-T01-IM5     0     1     0     0     0 #> 6 P-0001768-T01-IM3     0     0     1     0     0  colnames(all_bin) #>  [1] \"sample_id\"   \"PARP1\"       \"AKT1\"        \"ALK\"         \"APC\"         #>  [6] \"BRCA2\"       \"CTNNB1\"      \"EPHB1\"       \"FAT1\"        \"JAK1\"        #> [11] \"SMAD2\"       \"MYC\"         \"NF1\"         \"PDGFRA\"      \"PIK3R2\"      #> [16] \"PPP2R1A\"     \"ROS1\"        \"TP53\"        \"KMT2D\"       \"SPOP\"        #> [21] \"PIK3R3\"      \"IRS2\"        \"SPEN\"        \"ASXL2\"       \"KMT2C\"       #> [26] \"CARD11\"      \"ERG.fus\"     \"TMPRSS2.fus\" \"PTPRS.Del\"   \"KDM6A.Del\"   #> [31] \"NKX3-1.Del\"  \"AR.Amp\"      \"TRAF7.Amp\"   \"TSC2.Amp\"    \"FGFR1.Amp\"   #> [36] \"SOX17.Amp\"   \"RECQL4.Amp\"  \"MYC.Amp\"     \"NBN.Amp\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"collapse-data-with-summarize_by_gene","dir":"Articles","previous_headings":"Preparing Data For Analysis","what":"Collapse Data with summarize_by_gene()","title":"Processing Data with {gnomeR}","text":"type alteration event (mutation, amplification, deletion, structural variant) matter analysis, want see event occurred gene, pipe create_gene_binary() object summarize_by_gene() function. can see, compresses alteration types gene one column. , all_bin ERG.fus column ERG column, now summarize_by_gene() ERG column 1 type event.","code":"dim(all_bin) #> [1] 10 39   all_bin_summary <- all_bin %>%    summarize_by_gene()  all_bin_summary[1:6, 1:6] #>           sample_id PARP1 AKT1 ALK APC BRCA2 #> 1 P-0001128-T01-IM3     1    1   0   0     1 #> 2 P-0001859-T01-IM3     1    0   0   1     0 #> 3 P-0001895-T01-IM3     1    0   1   0     0 #> 4 P-0001845-T01-IM3     0    1   0   0     0 #> 5 P-0005570-T01-IM5     0    1   0   0     0 #> 6 P-0001768-T01-IM3     0    0   1   0     0   colnames(all_bin_summary) #>  [1] \"sample_id\" \"PARP1\"     \"AKT1\"      \"ALK\"       \"APC\"       \"BRCA2\"     #>  [7] \"CTNNB1\"    \"EPHB1\"     \"FAT1\"      \"JAK1\"      \"SMAD2\"     \"NF1\"       #> [13] \"PDGFRA\"    \"PIK3R2\"    \"PPP2R1A\"   \"ROS1\"      \"TP53\"      \"KMT2D\"     #> [19] \"SPOP\"      \"PIK3R3\"    \"IRS2\"      \"SPEN\"      \"ASXL2\"     \"KMT2C\"     #> [25] \"CARD11\"    \"ERG\"       \"TMPRSS2\"   \"PTPRS\"     \"KDM6A\"     \"NKX3-1\"    #> [31] \"AR\"        \"TRAF7\"     \"TSC2\"      \"FGFR1\"     \"SOX17\"     \"RECQL4\"    #> [37] \"NBN\"       \"MYC\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"analyzing-data","dir":"Articles","previous_headings":"","what":"Analyzing Data","title":"Processing Data with {gnomeR}","text":"processed data binary format, may want visualize summarize following helper functions:","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"summarize-alterations-with-subset_by_frequency-and-tbl_genomic","dir":"Articles","previous_headings":"Analyzing Data","what":"Summarize Alterations with subset_by_frequency() and tbl_genomic()","title":"Processing Data with {gnomeR}","text":"can use subset_by_frequency() function along tbl_genomic() function easily display highest prevalence alterations data set. First, subset data set top genes give threshold (t). threshold value 0 1 indicate % prevalence cutoff keep. can subset threshold alteration level: gene level: Next, can pass subset genes alterations tbl_genomic() function, can used display summary tables alterations. built {gtsummary} package therefore can use customizations available package alter look tables. gene_binary argument expects binary data generated create_gene_binary(), summarize_by_gene() subset_by_frequency() functions. Example shows summary using gene data ten samples. example tb1, gene altered least 15% samples, gene included summary table. can add additional customizations table following gtsummary functions:","code":"top_prev_alts <- all_bin %>%   subset_by_frequency(t = .1)  colnames(top_prev_alts) #>  [1] \"sample_id\"   \"ALK\"         \"PARP1\"       \"AKT1\"        \"APC\"         #>  [6] \"BRCA2\"       \"TP53\"        \"FAT1\"        \"SMAD2\"       \"SPOP\"        #> [11] \"SPEN\"        \"KMT2C\"       \"ERG.fus\"     \"TMPRSS2.fus\" \"AR.Amp\"      #> [16] \"CTNNB1\"      \"EPHB1\"       \"JAK1\"        \"MYC\"         \"NF1\"         #> [21] \"PDGFRA\"      \"PIK3R2\"      \"PPP2R1A\"     \"ROS1\"        \"KMT2D\"       #> [26] \"PIK3R3\"      \"IRS2\"        \"ASXL2\"       \"CARD11\"      \"PTPRS.Del\"   #> [31] \"KDM6A.Del\"   \"NKX3-1.Del\"  \"TRAF7.Amp\"   \"TSC2.Amp\"    \"FGFR1.Amp\"   #> [36] \"SOX17.Amp\"   \"RECQL4.Amp\"  \"MYC.Amp\"     \"NBN.Amp\" top_prev_genes <- all_bin_summary %>%   subset_by_frequency(t = .1)  colnames(top_prev_genes) #>  [1] \"sample_id\" \"ALK\"       \"PARP1\"     \"AKT1\"      \"APC\"       \"BRCA2\"     #>  [7] \"TP53\"      \"FAT1\"      \"SMAD2\"     \"SPOP\"      \"SPEN\"      \"KMT2C\"     #> [13] \"ERG\"       \"TMPRSS2\"   \"AR\"        \"MYC\"       \"CTNNB1\"    \"EPHB1\"     #> [19] \"JAK1\"      \"NF1\"       \"PDGFRA\"    \"PIK3R2\"    \"PPP2R1A\"   \"ROS1\"      #> [25] \"KMT2D\"     \"PIK3R3\"    \"IRS2\"      \"ASXL2\"     \"CARD11\"    \"PTPRS\"     #> [31] \"KDM6A\"     \"NKX3-1\"    \"TRAF7\"     \"TSC2\"      \"FGFR1\"     \"SOX17\"     #> [37] \"RECQL4\"    \"NBN\" samples <- unique(mutations$sampleId)[1:10]  gene_binary <- create_gene_binary(   samples = samples,   mutation = mutations,   cna = cna,   mut_type = \"somatic_only\", snp_only = FALSE,   specify_panel = \"no\" )  tbl1 <- gene_binary %>% subset_by_frequency(t = .15) %>%   tbl_genomic() tbl1 %>%   gtsummary::bold_labels()"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"annotate-gene-pathways-with-add_pathways","dir":"Articles","previous_headings":"Analyzing Data","what":"Annotate Gene Pathways with add_pathways()","title":"Processing Data with {gnomeR}","text":"add_pathways() function allows add columns gene binary matrix annotate custom gene pathways, oncogenic signaling pathways (add citation). function expects binary matrix obtained gene_binary() function return gene binary additional columns added specified pathways. set default pathways available package can viewed using gnomeR::pathways (Sanchez-Vega, F et al., 2018). new data frame include columns mutations, CNAs, structural variants, pathways. can subset pathways choose.","code":"# available pathways names(gnomeR::pathways) #>  [1] \"RTK/RAS\"    \"Nrf2\"       \"PI3K\"       \"TGFB\"       \"p53\"        #>  [6] \"Wnt\"        \"Myc\"        \"Cell cycle\" \"Hippo\"      \"Notch\"  pathways <- add_pathways(gene_binary, pathways = c(\"Notch\", \"p53\")) %>%   select(sample_id, pathway_Notch, pathway_p53)  head(pathways) #> # A tibble: 6 × 3 #>   sample_id         pathway_Notch pathway_p53 #>   <chr>                     <dbl>       <dbl> #> 1 P-0001128-T01-IM3             0           1 #> 2 P-0001859-T01-IM3             0           0 #> 3 P-0001895-T01-IM3             0           0 #> 4 P-0001845-T01-IM3             0           0 #> 5 P-0005570-T01-IM5             0           0 #> 6 P-0001768-T01-IM3             0           1"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"data-visualizations","dir":"Articles","previous_headings":"Analyzing Data","what":"Data Visualizations","title":"Processing Data with {gnomeR}","text":"mutation_viz functions allows visualize data variables related variant classification, variant type, SNV class well top variant genes.","code":"mutation_viz(mutations) #> $varclass #>  #> $vartype #>  #> $samplevar #>  #> $topgenes #>  #> $genecor"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"customizing-your-colors","dir":"Articles","previous_headings":"Analyzing Data > Data Visualizations","what":"Customizing your colors","title":"Processing Data with {gnomeR}","text":"{gnomeR} comes 3 distinct palettes can useful plotting high dimensional genomic data: pancan, main, sunset. pancan main offer wide range colors can useful map discrete scales. sunset fewer colors offers color spectrum useful interpolation continuous variables. can view hex codes colors gnomer_colors, 3 distinct palettes gnomer_palettes$pancan, gnomer_palettes$main, gnomer_palettes$sunset. gnomer_palette() used set/subset specific palettes, create continuous palette, /plot palettes show user specific colors chose. code show first 4 colors pancan palette discrete palette.  wanted make continuous palette can change type= option specify many colors want use create gradient palette. type = continuous uses grDevices::colorRampPalette() engine create gradient palette. Additionally, gnomer_palette() accepts additional arguments passed colorRampPalette() parameter .... example uses 20 colors.  Examples use gnomer_palette():","code":"gnomer_palette(   name = \"pancan\",   n = 4,   type = \"discrete\",   plot_col = TRUE,   reverse = FALSE ) #> [1] \"#67000D\" \"#A50F15\" \"#EF3B2C\" \"#FC9272\" gnomer_palette(   name = \"sunset\",   n = 20,   type = \"continuous\",   plot_col = TRUE,   reverse = FALSE ) #>  [1] \"#EAC800\" \"#EAB807\" \"#EAA80F\" \"#EA9817\" \"#E7892B\" \"#E37941\" \"#DF6A57\" #>  [8] \"#D85B65\" \"#CF4C6F\" \"#C73D79\" \"#BC2D80\" \"#B01C84\" \"#A40B88\" \"#96008B\" #> [15] \"#85008B\" \"#74008B\" \"#61018B\" \"#41088A\" \"#201089\" \"#001889\" library(ggplot2)  ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) +   geom_point(size = 4) +   scale_color_manual(values = gnomer_palette(\"pancan\")) # use a continuous color scale - interpolates between colors ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) +   geom_point(size = 4, alpha = .6) +   scale_color_gradientn(colors =                            gnomer_palette(\"sunset\", type = \"continuous\"))"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/data-processing-vignette.html","id":"set-color-palettes-globally","dir":"Articles","previous_headings":"Analyzing Data > Data Visualizations","what":"Set Color Palettes Globally","title":"Processing Data with {gnomeR}","text":"want constantly set palette plot can set palette theme globally entire session using set_gnomer_palette(). Additionally, can set discrete gradient (appropriate continuous variables) palette independently. examples can see default colors change plot without call scale_* function.   can reset palettes back default ggplot color palettes reset_gnomer_palette().","code":"set_gnomer_palette(palette = \"main\", gradient = \"sunset\")  ggplot(mtcars, aes(wt, mpg, color = factor(cyl))) +   geom_point() ggplot(mtcars, aes(wt, mpg, color = cyl)) +   geom_point() reset_gnomer_palette()  ggplot(mtcars, aes(wt, mpg, color = cyl)) +   geom_point()"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/qa-impact-data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to QA Your IMPACT Data","text":"purpose vignette outline best practices downloading, QA-ing analyzing data generated MSK IMPACT, targeted tumor-sequencing test can detect 468 gene mutations critical genetic changes common rare cancers. Using hepatocellular cancer case study, demonstrate data analysis pipeline using {cbioportalR} functions can help users generate reproducible analyses using data.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/qa-impact-data.html","id":"setting-up","dir":"Articles","previous_headings":"","what":"Setting up","title":"How to QA Your IMPACT Data","text":"vignette, using {cbioportalR}, package download data cBioPortal website. also using {dplyr} {tidyr} clean manipulate data: access cBioPortal data using {cbioportalR} package, must set cBioPortal database using set_cbioportal_db() function. access public data, set db = public. using private version cBioPortal, set db argument institution’s cBioPortal URL.","code":"library(gnomeR) library(cbioportalR) library(dplyr) library(tidyr) set_cbioportal_db(db = \"public\") #> ✔ You are successfully connected! #> ✔ base_url for this R session is now set to \"www.cbioportal.org/api\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/qa-impact-data.html","id":"case-study","dir":"Articles","previous_headings":"","what":"Case Study","title":"How to QA Your IMPACT Data","text":"Scenario: data analyst whose collaborator sent clinical file cohort patients hepatocellular cancer interested retrospective data analysis. particular, wants look IMPACT sequencing data cohort investigate associations genomic alterations pathological clinical characteristics. asks can get IMPACT data analysis. gives clinical file 80 sample IDs: clin_collab_df. sample IDs cbioportal_id column. using cBioPortal access genomic data, first want QA clinical data make sure matches clinical data cBioPortal.","code":"head(clin_collab_df) #> # A tibble: 6 × 3 #>   cbioportal_id     ctype          primary_mets #>   <chr>             <chr>          <chr>        #> 1 P-0066922-T02-IM7 Hepatocellular Primary      #> 2 P-0009540-T01-IM5 Hepatocellular Primary      #> 3 P-0000182-T01-IM3 Hepatocellular Metastasis   #> 4 P-0000037-T02-IM3 Hepatocellular Primary      #> 5 P-0005357-T01-IM5 Hepatocellular Primary      #> 6 P-0007773-T01-IM5 Hepatocellular Metastasis"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/qa-impact-data.html","id":"check-for-multiple-samples-per-patient","dir":"Articles","previous_headings":"Case Study","what":"Check For Multiple Samples Per Patient","title":"How to QA Your IMPACT Data","text":"One first things check data whether multiple sample IDs patient. Sometimes clinical file patient_ID column well; one doesn’t, can make . patient ID just first 9 digits cbioportal_id: one sample per patient, number samples patients. ’s clear multiple samples per patient. find patient/s, can count patient_id values filter >1. 2 patients 2 samples collaborator’s dataset. Filter dataset see cbioportal_id’s question: patients samples ask collaborator : using samples make sense? Often times answer . , sample appropriate one include? (get info , can enter patient ids cBioPortal website.)","code":"clin_collab_df <- clin_collab_df %>%   mutate(     patient_id = substr(cbioportal_id, 1, 9)   ) clin_collab_df %>%     summarize( patients = length(unique(patient_id)),             samples= length(unique(cbioportal_id)))  #> # A tibble: 1 × 2 #>   patients samples #>      <int>   <int> #> 1       78      80 multiple_samps <- clin_collab_df %>%     count(patient_id) %>%   filter(n > 1) multiple_samps #> # A tibble: 2 × 2 #>   patient_id     n #>   <chr>      <int> #> 1 P-0004876      2 #> 2 P-0012198      2 clin_collab_df %>%    filter(   patient_id %in%      (multiple_samps$patient_id)) #> # A tibble: 4 × 4 #>   cbioportal_id     ctype          primary_mets patient_id #>   <chr>             <chr>          <chr>        <chr>      #> 1 P-0004876-T01-IM5 Hepatocellular Primary      P-0004876  #> 2 P-0012198-T02-IM5 Hepatocellular Primary      P-0012198  #> 3 P-0004876-T02-IM5 Hepatocellular Primary      P-0004876  #> 4 P-0012198-T01-IM5 Hepatocellular Primary      P-0012198"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/qa-impact-data.html","id":"check-that-all-cbioportal_ids-are-in-cbioportal-database","dir":"Articles","previous_headings":"Case Study","what":"Check That All cbioportal_ids Are In cBioPortal Database","title":"How to QA Your IMPACT Data","text":", need retrieve clinical data cBioPortal using {cbioportalR}. can use get_clinical_by_sample() function {cbioportalR} . Set sample_id parameter cbioportal_ids clinical collaborator’s file. Store sample data file called clin_cbio. (can disregard warning message now, though may interested specific clinical attributes later.) Note: using public version cBioPortal, function query msk_impact_2017 study. Notice now 2 clinical files: one given collaborator (clin_collab_df) one retrieved cBioPortal (clin_cbio). ’s header clin_cbio: sample IDs sampleId column. may notice file “long” format sample multiple rows. Later convert file “wide” format QA checking attributes. first thing want know whether able find cbioportal_ids clin_collab_df file clin_cbio file. , use setdiff() function: two sample ID’s clinical file (clin_collab_df) currently found cBioPortal (clin_cbio file). Include list cBioPortal questions ask collaborator. (, want investigate bit , enter patient cBioPortal IDs queries cBioPortal website.)","code":"clin_cbio = get_clinical_by_sample(sample_id = clin_collab_df$cbioportal_id)  #> ! No `clinical_attribute` passed. Defaulting to returning #> all clinical attributes in \"msk_impact_2017\" study head(clin_cbio) %>% as.data.frame() #>                                uniqueSampleKey #> 1 UC0wMDAwMDM3LVQwMi1JTTM6bXNrX2ltcGFjdF8yMDE3 #> 2 UC0wMDAwMDM3LVQwMi1JTTM6bXNrX2ltcGFjdF8yMDE3 #> 3 UC0wMDAwMDM3LVQwMi1JTTM6bXNrX2ltcGFjdF8yMDE3 #> 4 UC0wMDAwMDM3LVQwMi1JTTM6bXNrX2ltcGFjdF8yMDE3 #> 5 UC0wMDAwMDM3LVQwMi1JTTM6bXNrX2ltcGFjdF8yMDE3 #> 6 UC0wMDAwMDM3LVQwMi1JTTM6bXNrX2ltcGFjdF8yMDE3 #>                     uniquePatientKey          sampleId patientId #> 1 UC0wMDAwMDM3Om1za19pbXBhY3RfMjAxNw P-0000037-T02-IM3 P-0000037 #> 2 UC0wMDAwMDM3Om1za19pbXBhY3RfMjAxNw P-0000037-T02-IM3 P-0000037 #> 3 UC0wMDAwMDM3Om1za19pbXBhY3RfMjAxNw P-0000037-T02-IM3 P-0000037 #> 4 UC0wMDAwMDM3Om1za19pbXBhY3RfMjAxNw P-0000037-T02-IM3 P-0000037 #> 5 UC0wMDAwMDM3Om1za19pbXBhY3RfMjAxNw P-0000037-T02-IM3 P-0000037 #> 6 UC0wMDAwMDM3Om1za19pbXBhY3RfMjAxNw P-0000037-T02-IM3 P-0000037 #>           studyId     clinicalAttributeId                    value #> 1 msk_impact_2017             CANCER_TYPE     Hepatobiliary Cancer #> 2 msk_impact_2017    CANCER_TYPE_DETAILED Hepatocellular Carcinoma #> 3 msk_impact_2017               DNA_INPUT                      250 #> 4 msk_impact_2017 FRACTION_GENOME_ALTERED                   0.2373 #> 5 msk_impact_2017          MATCHED_STATUS                  Matched #> 6 msk_impact_2017          MUTATION_COUNT                        3 setdiff(clin_collab_df$cbioportal_id, clin_cbio$sampleId) #> [1] \"P-0066922-T02-IM7\" \"P-0070148-T01-IM5\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/articles/qa-impact-data.html","id":"check-clinical-data-matches-cbioportal-database","dir":"Articles","previous_headings":"Case Study","what":"Check Clinical Data Matches cBioPortal Database","title":"How to QA Your IMPACT Data","text":"Now need check whether clinical information collaborator’s file (clin_collab_df) matches clinical information cBioPortal (clin_cbio file). Look clin_collab_df : Aside cbioportal_id, cancer type (ctype) sample type (primary_mets) variables. ’s hepatocellular cancer study, ctype values . double check , count ctype: variable can check example primary_mets. see clin_cbio file analogous variable check, first see attributes available . quickly see values associated particular attribute, filter attribute count values. example: attribute SAMPLE_TYPE looks like appropriate variable check primary_mets . , convert clin_cbio “wide” form (SAMPLE_TYPE variable now), merge clin_collab_df cross-tabulate 2 variables. convert clin_cbio “wide” form: Take look “wide” file: Now check primary_mets variable clin_collab_df SAMPLE_TYPE variable clin_cbio_wide, merge files tabulate variables. 1 sample value “Metastasis” primary_mets variable “Primary” SAMPLE_TYPE variable. find sample ID, filter: Include sample list questions collaborator. Either need update clinical file correct value /notify cBioPortal update database.","code":"head(clin_collab_df) #> # A tibble: 6 × 4 #>   cbioportal_id     ctype          primary_mets patient_id #>   <chr>             <chr>          <chr>        <chr>      #> 1 P-0066922-T02-IM7 Hepatocellular Primary      P-0066922  #> 2 P-0009540-T01-IM5 Hepatocellular Primary      P-0009540  #> 3 P-0000182-T01-IM3 Hepatocellular Metastasis   P-0000182  #> 4 P-0000037-T02-IM3 Hepatocellular Primary      P-0000037  #> 5 P-0005357-T01-IM5 Hepatocellular Primary      P-0005357  #> 6 P-0007773-T01-IM5 Hepatocellular Metastasis   P-0007773 clin_collab_df %>% count(ctype) #> # A tibble: 1 × 2 #>   ctype              n #>   <chr>          <int> #> 1 Hepatocellular    80 clin_cbio %>% count(clinicalAttributeId) #> # A tibble: 18 × 2 #>    clinicalAttributeId            n #>    <chr>                      <int> #>  1 CANCER_TYPE                   78 #>  2 CANCER_TYPE_DETAILED          78 #>  3 DNA_INPUT                     78 #>  4 FRACTION_GENOME_ALTERED       78 #>  5 MATCHED_STATUS                78 #>  6 METASTATIC_SITE                7 #>  7 MUTATION_COUNT                78 #>  8 ONCOTREE_CODE                 78 #>  9 PRIMARY_SITE                  78 #> 10 SAMPLE_CLASS                  78 #> 11 SAMPLE_COLLECTION_SOURCE      78 #> 12 SAMPLE_COVERAGE               78 #> 13 SAMPLE_TYPE                   78 #> 14 SOMATIC_STATUS                78 #> 15 SPECIMEN_PRESERVATION_TYPE    78 #> 16 SPECIMEN_TYPE                 78 #> 17 TMB_NONSYNONYMOUS             78 #> 18 TUMOR_PURITY                  77 clin_cbio %>% filter(clinicalAttributeId==\"SAMPLE_TYPE\") %>% count(value) #> # A tibble: 2 × 2 #>   value          n #>   <chr>      <int> #> 1 Metastasis     7 #> 2 Primary       71 clin_cbio_wide = clin_cbio %>%    select( sampleId, clinicalAttributeId, value) %>%   filter( clinicalAttributeId == \"SAMPLE_TYPE\") %>%    pivot_wider(names_from = clinicalAttributeId, values_from = value) head(clin_cbio_wide) %>% as.data.frame() #>            sampleId SAMPLE_TYPE #> 1 P-0000037-T02-IM3     Primary #> 2 P-0000182-T01-IM3  Metastasis #> 3 P-0000218-T01-IM3  Metastasis #> 4 P-0000228-T03-IM5     Primary #> 5 P-0000587-T01-IM3  Metastasis #> 6 P-0000829-T01-IM3     Primary clin_merged <- clin_cbio_wide %>% left_join(clin_collab_df, by = c(\"sampleId\" = \"cbioportal_id\"))  clin_merged %>% select(primary_mets, SAMPLE_TYPE) %>% table() #>             SAMPLE_TYPE #> primary_mets Metastasis Primary #>   Metastasis          7       1 #>   Primary             0      70 clin_merged %>% filter(primary_mets == \"Metastasis\" & SAMPLE_TYPE == \"Primary\") #> # A tibble: 1 × 5 #>   sampleId          SAMPLE_TYPE ctype          primary_mets patient_id #>   <chr>             <chr>       <chr>          <chr>        <chr>      #> 1 P-0001324-T01-IM3 Primary     Hepatocellular Metastasis   P-0001324"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karissa Whiting. Author, maintainer. Michael Curry. Author. Hannah Fuchs. Author. Axel Martin. Author. Arshi Arora. Author.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Whiting K, Curry M, Fuchs H, Martin , Arora (2023). gnomeR: Wrangle analyze IMPACT TCGA mutation data. https://github.com/MSKCC-Epi-Bio/gnomeR, https://mskcc-epi-bio.github.io/gnomeR/.","code":"@Manual{,   title = {gnomeR: Wrangle and analyze IMPACT and TCGA mutation data},   author = {Karissa Whiting and Michael Curry and Hannah Fuchs and Axel Martin and Arshi Arora},   year = {2023},   note = {https://github.com/MSKCC-Epi-Bio/gnomeR, https://mskcc-epi-bio.github.io/gnomeR/}, }"},{"path":[]},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"can install development version gnomeR GitHub : Along companion package cbioPortal data download:","code":"# install.packages(\"devtools\") devtools::install_github(\"MSKCC-Epi-Bio/gnomeR\") devtools::install_github(\"karissawhiting/cbioportalR\")"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"gnomeR package provides consistent framework genetic data processing, visualization analysis. primarily targeted IMPACT datasets can also applied genomic data provided cBioPortal. {gnomeR} {cbioportalR} can: Download gather data CbioPortal - Pull cBioPortal data base study ID sample ID. OncoKB annotate data (coming soon) - Filter genomic data known oncogenic alterations. Process genomic data - Process retrieved mutation/maf, fusions, copy-number alteration, segmentation data (available) analysis-ready formats. Visualize processed data - Create summary plots processed data. Analyzing processed data- Analyze associations genomic variables clinical variables outcomes.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"getting-set-up","dir":"","previous_headings":"","what":"Getting Set up","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"{gnomeR} works genomic data follows cBioPortal guidelines mutation, CNA, fusion data file formats. wish pull data directly cBioPortal, see get set credentials {cbioportalR} package.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"processing-genomic-data","dir":"","previous_headings":"","what":"Processing Genomic Data","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"examples uses data sets mutatations, sv, cna pulled cBioPortal included package example data sets. sample 100 samples examples: main data processing function create_gene_binary() takes mutation, CNA fusion files input, outputs binary matrix N rows (number samples) M genes included data set. can specify patients included force patients resulting dataframe, even alterations. default, mutations, CNA fusions returned separate columns. can combine gene level using following:","code":"set.seed(123)  mut <- gnomeR::mutations cna <- gnomeR::cna sv <- gnomeR::sv  un <-  unique(mut$sampleId) sample_patients <- sample(un, size = 50, replace = FALSE) gen_dat <- create_gene_binary(samples = sample_patients,                          mutation = mut,                          fusion = sv,                          cna = cna)  head(gen_dat[, 1:6]) #> # A tibble: 6 × 6 #>   sample_id           ALK   APC    AR  ARAF   ATM #>   <chr>             <dbl> <dbl> <dbl> <dbl> <dbl> #> 1 P-0004508-T01-IM5     1     0     0     0     0 #> 2 P-0005806-T01-IM5     0     1     0     0     0 #> 3 P-0007006-T01-IM5     0     1     0     0     0 #> 4 P-0008682-T01-IM5     0     1     0     0     0 #> 5 P-0001297-T01-IM3     0     0     1     0     0 #> 6 P-0007538-T01-IM5     0     0     0     1     0 by_gene <- gen_dat %>%    summarize_by_gene()  head(by_gene[,1:6]) #>           sample_id ALK ARAF BLM CD79B CSF1R #> 1 P-0004508-T01-IM5   1    0   0     0     0 #> 2 P-0005806-T01-IM5   0    0   0     0     0 #> 3 P-0007006-T01-IM5   0    0   0     0     0 #> 4 P-0008682-T01-IM5   0    0   0     0     0 #> 5 P-0001297-T01-IM3   0    0   0     0     0 #> 6 P-0007538-T01-IM5   0    1   0     0     1"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"visualize","dir":"","previous_headings":"","what":"Visualize","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"can visualize processed raw alteration data sets using {gnomeR}’s many data visualization functions. Quickly visualize mutation characteristics ggvarclass(), ggvartype(), ggsnvclass(), ggsamplevar(), ggtopgenes(), gggenecor(), ggcomut().","code":"ggvarclass(mutation = mut)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"summarize--analyze","dir":"","previous_headings":"","what":"Summarize & Analyze","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"can tabulate summarize genomic data frame using tbl_genomic() function, wrapper gtsummary::tbl_summary().  Additionally, can analyze custom pathways, set default gene pathways using add_pathways():","code":"gen_dat <- gen_dat %>%   dplyr::mutate(trt_status = sample(x = c(\"pre-trt\", \"post-trt\"),        size = nrow(gen_dat), replace = TRUE)) gene_tbl_trt <-  gen_dat %>%   subset_by_frequency(t = .1, other_vars = trt_status) %>%   tbl_genomic(by = trt_status) %>%   gtsummary::add_p() path_by_trt <- gen_dat %>%   add_pathways() %>%   select(sample_id, trt_status, contains(\"pathway_\")) %>%   tbl_genomic(by = trt_status) %>%   gtsummary::add_p()"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Wrangle and analyze IMPACT and TCGA mutation data ","text":"Please note gnomeR project released Contributor Code Conduct. contributing project, agree abide terms. Thank contributors! @akriti21, @alrein-05, @arorarshi, @AxelitoMartin, @carokos, @ChristineZ-msk, @edrill, @hfuchs5, @jalavery, @jflynn264, @karissawhiting, @michaelcurry1123, @mljaniczek, @slb2240","code":""},{"path":[]},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway Alterations — add_pathways","title":"Pathway Alterations — add_pathways","text":"Please note sample_id column, columns .Amp, .Del, .fus suffix accepted. gene column suffix assumed mutation.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway Alterations — add_pathways","text":"","code":"add_pathways(   gene_binary,   pathways = c(names(gnomeR::pathways)),   custom_pathways = NULL,   count_pathways_by = deprecated() )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pathway Alterations — add_pathways","text":"Sanchez-Vega, F., Mina, M., Armenia, J., Chatila, W. K., Luna, ., La, K. C., Dimitriadoy, S., Liu, D. L., Kantheti, H. S., Saghafinia, S., Chakravarty, D., Daian, F., Gao, Q., Bailey, M. H., Liang, W. W., Foltz, S. M., Shmulevich, ., Ding, L., Heins, Z., Ochoa, ., … Schultz, N. (2018). Oncogenic Signaling Pathways Cancer Genome Atlas. Cell, 173(2), 321–337.e10. https://doi.org/10.1016/j.cell.2018.03.035","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway Alterations — add_pathways","text":"gene_binary binary matrix create_gene_binary() pathways vector pre-coded pathways annotate. options names(gnomeR::pathways) (\"RTK/RAS\", \"Nrf2\", \"PI3K\", \"TGFB\", \"p53\", \"Wnt\", \"Myc\", \"Cell cycle\", \"Hippo\", \"Notch\"). can pass multiple pathway names, NULL. default, pathways defined gnomeR::pathways included. Included default pathways alteration-specific, meaning specific type alteration (mut/cna/fusion) required mark 1 pathway. custom_pathways vector alterations annotate single pathway, list custom pathways (see gnomeR::pathways example). must specify alteration type gene using .mut, .Amp, .Del suffix, e.g. c(\"TP53.mut\", \"CDKN2A.Amp\"). wish count type alteration gene towards pathway can use .suffix (e.g. c(\"TP53.\")). count_pathways_by deprecated","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pathway Alterations — add_pathways","text":"data frame: sample row, columns pathways, values 0/1 depending pathway alteration status.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pathway Alterations — add_pathways","text":"Input binary matrix patients x alterations return dataframe column per pathway indicating default custom oncogenic signaling pathways activated sample. Default package pathways sourced Sanchez-Vega, F et al., 2018. Please check gene aliases data set using.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/add_pathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pathway Alterations — add_pathways","text":"","code":"gene_binary <- create_gene_binary(mutation = gnomeR::mutations,  cna = gnomeR::cna,  fusion = gnomeR::sv) #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix. pathway_df <- add_pathways(gene_binary, pathways = \"Notch\")"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_any_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Missing Gene Values According to Specific Panels — annotate_any_panel","title":"Annotate Missing Gene Values According to Specific Panels — annotate_any_panel","text":"Annotate Missing Gene Values According Specific Panels","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_any_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Missing Gene Values According to Specific Panels — annotate_any_panel","text":"","code":"annotate_any_panel(sample_panel_pair, gene_binary)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_any_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Missing Gene Values According to Specific Panels — annotate_any_panel","text":"sample_panel_pair data frame sample_id-panel_id pairs specifying panels use annotation sample gene_binary binary matrix 0/1 indicating alteration yes/sample","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_any_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate Missing Gene Values According to Specific Panels — annotate_any_panel","text":"gene_binary annotated missingness","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_specific_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function  to insert NA's According to Panel — annotate_specific_panel","title":"Utility function  to insert NA's According to Panel — annotate_specific_panel","text":"Utility function  insert NA's According Panel","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_specific_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function  to insert NA's According to Panel — annotate_specific_panel","text":"","code":"annotate_specific_panel(gene_binary, panel_id, samples_in_panel, na_genes, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_specific_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function  to insert NA's According to Panel — annotate_specific_panel","text":"gene_binary processed binary matrix panel_id name gene panel samples_in_panel samples annotated panel na_genes genes make NA ... args passed","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/annotate_specific_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function  to insert NA's According to Panel — annotate_specific_panel","text":"annotated data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/clin_collab_df.html","id":null,"dir":"Reference","previous_headings":"","what":"An example data set for an IMPACT analysis coming from a clinical collaborator — clin_collab_df","title":"An example data set for an IMPACT analysis coming from a clinical collaborator — clin_collab_df","text":"set created sample 20 patients publicly available prostate cancer data cBioPortal (study_id = \"gbc_mskcc_2022\").","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/clin_collab_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example data set for an IMPACT analysis coming from a clinical collaborator — clin_collab_df","text":"","code":"clin_collab_df"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/clin_collab_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example data set for an IMPACT analysis coming from a clinical collaborator — clin_collab_df","text":"data frame copy number alterations (CNA) retrieved cBioPortal. cbioportal_id character IMPACT sample ID ctype character cancer type primary_mets character sample type","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna.html","id":null,"dir":"Reference","previous_headings":"","what":"An example IMPACT cBioPortal mutation data set in API format — cna","title":"An example IMPACT cBioPortal mutation data set in API format — cna","text":"set created random sample 200 patients publicly available prostate cancer data cBioPortal. file API format.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example IMPACT cBioPortal mutation data set in API format — cna","text":"","code":"cna"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example IMPACT cBioPortal mutation data set in API format — cna","text":"data frame copy number alterations (CNA) Abida et al. JCO Precis Oncol 2017.Retrieved cBioPortal.475 observations 29 variables. hugoGeneSymbol Character w/ 324 levels, Column containing HUGO symbols genes entrezGeneId Entrez Gene ID molecularProfileId Molecular Profile ID data set sampleId MSKCC Sample ID patientId Patient ID studyId Indicator Abida et al. 2017 study alteration Factor, Type CNA uniqueSampleKey character COLUMN_DESCRIPTION uniquePatientKey character COLUMN_DESCRIPTION","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example IMPACT cBioPortal mutation data set in API format — cna","text":"https://www.cbioportal.org/study/summary?id=prad_mskcc_2017","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"An example IMPACT cBioPortal CNA in wide format — cna_wide","title":"An example IMPACT cBioPortal CNA in wide format — cna_wide","text":"set created sample 20 patients publicly available prostate cancer data cBioPortal (study_id = \"gbc_mskcc_2022\").","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example IMPACT cBioPortal CNA in wide format — cna_wide","text":"","code":"cna_wide"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/cna_wide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example IMPACT cBioPortal CNA in wide format — cna_wide","text":"data frame copy number alterations (CNA) retrieved cBioPortal.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/consequence_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Consequence Map — consequence_map","title":"Consequence Map — consequence_map","text":"Data frame used data dictionary recode common variant classification types standardized types can used oncoKB annotation.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/consequence_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consequence Map — consequence_map","text":"","code":"consequence_map"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/consequence_map.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Consequence Map — consequence_map","text":"data frame variant_classification character indicating type mutation/variant classification appears common mutation files consequence_final_coding final value recode variant_classification column consequence_final_coding_2 final value recode variant_classification column consequence_final_coding_3 final value recode variant_classification column @source https://github.com/oncokb/oncokb-annotator/blob/a80ef0ce937c287778c36d45bf1cc8397539910c/AnnotatorCore.py#L118","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"Enables creation binary matrix mutation, fusion CNA file predefined list samples (rows samples columns genes)","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"","code":"create_gene_binary(   samples = NULL,   mutation = NULL,   mut_type = c(\"omit_germline\", \"somatic_only\", \"germline_only\", \"all\"),   snp_only = FALSE,   include_silent = FALSE,   fusion = NULL,   cna = NULL,   high_level_cna_only = FALSE,   specify_panel = \"no\",   recode_aliases = \"impact\" )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"samples character vector specifying samples included resulting data frame. Default NULL case samples alteration mutation, cna fusions file used. specify vector samples contain samples passed genomic data frames, 0's (NAs appropriate specifying panel) returned every column patient row. mutation data frame mutations format maf file. mut_type mutation type used. Options \"omit_germline\", \"somatic_only\", \"germline_only\" \"\". Note \"\" keep mutations regardless status (recommended). Default omit_germline includes somatic mutations, well unknown mutation types (usually somatic) snp_only Boolean rather genetics events kept SNPs (insertions deletions removed). Default FALSE. include_silent Boolean keep remove silent mutations. TRUE keeps, FALSE removes. Default FALSE. fusion data frame fusions. NULL outcome added matrix columns ending \".fus\". Default NULL. cna data frame copy number alterations. inputed outcome added matrix columns ending \".del\" \".amp\". Default NULL. high_level_cna_only TRUE, deep deletions (-2, -1.5) high level amplifications (2) counted events binary matrix. Gains (1) losses (1) ignored. Default FALSE CNA events counted. specify_panel Default \"\" panel annotation done. Otherwise pass character vector length 1 panel id (see gnomeR::gene_panels available panels), \"impact\" automated IMPACT annotation. Alternatively, may pass data frame sample_id-panel_id pairs specifying panels sample insert NAs indicating genes tested. See details. recode_aliases Default \"impact\" function check IMPACT genes may go 1 name data replace alias name standardized gene name (see gnomeR::impact_alias_table reference list). \"\", alias annotation performed. Alternatively, may pass custom alias list data frame columns hugo_symbol alias specifying custom alias table use checks. See details.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"data frame sample_id alteration binary columns values 0/1","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":"specify-panel-argument","dir":"Reference","previous_headings":"","what":"specify_panel argument","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"specify_panel = \"\" passed (default) data returned without additional NA annotations. single panel id passed (e.g. specify_panel = \"IMPACT468\"), genes data tested panel set NA results samples (see gnomeR::gene_panels see genes supported panels). specify_panel = \"impact\" passed, impact panel version inferred based sample_id (based IMX nomenclature) NA's annotated accordingly sample/panel pair. wish specify different panels sample, pass data frame (samples included) columns: sample_id, panel_id. sample annotated NAs according specific panel. sample data missing sample_id column specify_panel dataframe, returned annotation (equivalent setting \"\").","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":"recode-aliases-argument","dir":"Reference","previous_headings":"","what":"recode_aliases argument","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"recode_aliases = \"impact\" passed (default), function use gnomeR::impact_alias_table find replace non-standard hugo symbol names common (recent) accepted gene name. recode_aliases = \"\" passed, data returned without alias replacements. custom table vetted aliases wish use, can pass data frame columns: hugo_symbol, alias. row one gene hugo_symbol column indicating accepted gene name, one gene alias column indicating alias want check replace. gene multiple aliases check , represented separate row. See gnomeR::impact_alias_table example accepted data formatting.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/create_gene_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enables creation of a binary matrix from a mutation, fusion or CNA file with\na predefined list of samples (rows are samples and columns are genes) — create_gene_binary","text":"","code":"mut.only <- create_gene_binary(mutation = gnomeR::mutations) #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix.  samples <- gnomeR::mutations$sampleId  bin.mut <- create_gene_binary(   samples = samples, mutation = gnomeR::mutations,   mut_type = \"omit_germline\", snp_only = FALSE,   include_silent = FALSE ) #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix."},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-check_required_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a Data Frame for Required Columns — .check_required_cols","title":"Check a Data Frame for Required Columns — .check_required_cols","text":"Check Data Frame Required Columns","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-check_required_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a Data Frame for Required Columns — .check_required_cols","text":"","code":".check_required_cols(data, required_cols, data_name = NULL)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-check_required_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a Data Frame for Required Columns — .check_required_cols","text":"data data frame check required_cols character specifying names columns check data_name Optionally specify data set called error message. Default NULL call generic name.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-check_required_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a Data Frame for Required Columns — .check_required_cols","text":"data set required columns return error message. required columns, nothing returned","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-cna_gene_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Binary Matrix From CNA data frame — .cna_gene_binary","title":"Make Binary Matrix From CNA data frame — .cna_gene_binary","text":"Make Binary Matrix CNA data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-cna_gene_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Binary Matrix From CNA data frame — .cna_gene_binary","text":"","code":".cna_gene_binary(   cna,   samples,   specify_panel,   recode_aliases,   high_level_cna_only )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-cna_gene_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Binary Matrix From CNA data frame — .cna_gene_binary","text":"cna data frame copy number alterations. inputed outcome added matrix columns ending \".del\" \".amp\". Default NULL. samples character vector specifying samples included resulting data frame. Default NULL case samples alteration mutation, cna fusions file used. specify vector samples contain samples passed genomic data frames, 0's (NAs appropriate specifying panel) returned every column patient row. specify_panel Default \"\" panel annotation done. Otherwise pass character vector length 1 panel id (see gnomeR::gene_panels available panels), \"impact\" automated IMPACT annotation. Alternatively, may pass data frame sample_id-panel_id pairs specifying panels sample insert NAs indicating genes tested. See details. recode_aliases Default \"impact\" function check IMPACT genes may go 1 name data replace alias name standardized gene name (see gnomeR::impact_alias_table reference list). \"\", alias annotation performed. Alternatively, may pass custom alias list data frame columns hugo_symbol alias specifying custom alias table use checks. See details. high_level_cna_only TRUE, deep deletions (-2, -1.5) high level amplifications (2) counted events binary matrix. Gains (1) losses (1) ignored. Default FALSE CNA events counted.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-cna_gene_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Binary Matrix From CNA data frame — .cna_gene_binary","text":"data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-fusions_gene_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Binary Matrix From Fusion data frame — .fusions_gene_binary","title":"Make Binary Matrix From Fusion data frame — .fusions_gene_binary","text":"Make Binary Matrix Fusion data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-fusions_gene_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Binary Matrix From Fusion data frame — .fusions_gene_binary","text":"","code":".fusions_gene_binary(fusion, samples, specify_panel, recode_aliases)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-fusions_gene_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Binary Matrix From Fusion data frame — .fusions_gene_binary","text":"fusion data frame fusions. NULL outcome added matrix columns ending \".fus\". Default NULL. samples character vector specifying samples included resulting data frame. Default NULL case samples alteration mutation, cna fusions file used. specify vector samples contain samples passed genomic data frames, 0's (NAs appropriate specifying panel) returned every column patient row. specify_panel Default \"\" panel annotation done. Otherwise pass character vector length 1 panel id (see gnomeR::gene_panels available panels), \"impact\" automated IMPACT annotation. Alternatively, may pass data frame sample_id-panel_id pairs specifying panels sample insert NAs indicating genes tested. See details. recode_aliases Default \"impact\" function check IMPACT genes may go 1 name data replace alias name standardized gene name (see gnomeR::impact_alias_table reference list). \"\", alias annotation performed. Alternatively, may pass custom alias list data frame columns hugo_symbol alias specifying custom alias table use checks. See details.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-fusions_gene_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Binary Matrix From Fusion data frame — .fusions_gene_binary","text":"data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-mutations_gene_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Binary Matrix From Mutation data frame — .mutations_gene_binary","title":"Make Binary Matrix From Mutation data frame — .mutations_gene_binary","text":"Make Binary Matrix Mutation data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-mutations_gene_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Binary Matrix From Mutation data frame — .mutations_gene_binary","text":"","code":".mutations_gene_binary(   mutation,   samples,   mut_type,   snp_only,   include_silent,   specify_panel,   recode_aliases = recode_aliases )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-mutations_gene_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Binary Matrix From Mutation data frame — .mutations_gene_binary","text":"mutation data frame mutations format maf file. samples character vector specifying samples included resulting data frame. Default NULL case samples alteration mutation, cna fusions file used. specify vector samples contain samples passed genomic data frames, 0's (NAs appropriate specifying panel) returned every column patient row. mut_type mutation type used. Options \"omit_germline\", \"somatic_only\", \"germline_only\" \"\". Note \"\" keep mutations regardless status (recommended). Default omit_germline includes somatic mutations, well unknown mutation types (usually somatic) snp_only Boolean rather genetics events kept SNPs (insertions deletions removed). Default FALSE. include_silent Boolean keep remove silent mutations. TRUE keeps, FALSE removes. Default FALSE. specify_panel Default \"\" panel annotation done. Otherwise pass character vector length 1 panel id (see gnomeR::gene_panels available panels), \"impact\" automated IMPACT annotation. Alternatively, may pass data frame sample_id-panel_id pairs specifying panels sample insert NAs indicating genes tested. See details. recode_aliases Default \"impact\" function check IMPACT genes may go 1 name data replace alias name standardized gene name (see gnomeR::impact_alias_table reference list). \"\", alias annotation performed. Alternatively, may pass custom alias list data frame columns hugo_symbol alias specifying custom alias table use checks. See details.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-mutations_gene_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Binary Matrix From Mutation data frame — .mutations_gene_binary","text":"data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-process_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create binary data.frames depending on type of mutation data — .process_binary","title":"Create binary data.frames depending on type of mutation data — .process_binary","text":"Create binary data.frames depending type mutation data","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-process_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create binary data.frames depending on type of mutation data — .process_binary","text":"","code":".process_binary(data, samples, type = c(\"mut\", \"del\", \"amp\", \"fus\"))"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-process_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create binary data.frames depending on type of mutation data — .process_binary","text":"data dataset alterations samples vector unique sample ids type character indicator type alteration dataset contains","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-process_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create binary data.frames depending on type of mutation data — .process_binary","text":"data.frame alterations","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-sum_alts_in_pathway.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum Alterations in a Pathway — .sum_alts_in_pathway","title":"Sum Alterations in a Pathway — .sum_alts_in_pathway","text":"Sum Alterations Pathway","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-sum_alts_in_pathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum Alterations in a Pathway — .sum_alts_in_pathway","text":"","code":".sum_alts_in_pathway(   gene_binary,   pathway_list_item,   pathway_name,   count_pathways_by )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-sum_alts_in_pathway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum Alterations in a Pathway — .sum_alts_in_pathway","text":"gene_binary binary matrix (see gene_binary()) pathway_list_item named list length 1 pathway name name vector genes first item list pathway_name name pathway","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-sum_alts_in_pathway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum Alterations in a Pathway — .sum_alts_in_pathway","text":"dataframe 1 column 0/1s indicating pathway activated yes/","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/dot-sum_alts_in_pathway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum Alterations in a Pathway — .sum_alts_in_pathway","text":"","code":"gene_binary <- create_gene_binary(mutation = gnomeR::mutations, cna = gnomeR::cna, fusion = gnomeR::sv) #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix. x <- .sum_alts_in_pathway(gene_binary,  pathway_list_item = gnomeR::pathways[1],   pathway_name = names(gnomeR::pathways[1]),     count_pathways_by = \"alteration\")"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gene_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"Public Gene Panels on cBioPortal — gene_panels","title":"Public Gene Panels on cBioPortal — gene_panels","text":"Data frame cBioPortal gene panels sourced public GENIE cBioPortal instances.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gene_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Public Gene Panels on cBioPortal — gene_panels","text":"","code":"gene_panels"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gene_panels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Public Gene Panels on cBioPortal — gene_panels","text":"nested data frame gene_panels Gene panel ID genes_in_panel List column Hugo symbols genes panel entrez_ids_in_panel List column Entrez IDs genes panel","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gene_panels.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Public Gene Panels on cBioPortal — gene_panels","text":"https://cbioportal.mskcc.org/","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"An example GENIE BPC CNA data set — genie_cna","title":"An example GENIE BPC CNA data set — genie_cna","text":"set created sample 100 patients non-small cell lung cancer v.2.0-public data set.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example GENIE BPC CNA data set — genie_cna","text":"","code":"genie_cna"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_cna.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example GENIE BPC CNA data set — genie_cna","text":"data frame CNA retrieved using genieBPC package. Column names sample ids cohort.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_fusion.html","id":null,"dir":"Reference","previous_headings":"","what":"An example GENIE BPC fusions data set — genie_fusion","title":"An example GENIE BPC fusions data set — genie_fusion","text":"set created sample 100 patients non-small cell lung cancer v.2.0-public data set. row exists given hugo symbol tumor-sample-barcode, mutation observed.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_fusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example GENIE BPC fusions data set — genie_fusion","text":"","code":"genie_fusion"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_fusion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example GENIE BPC fusions data set — genie_fusion","text":"data frame fusions retrieved using genieBPC package","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_mut.html","id":null,"dir":"Reference","previous_headings":"","what":"An example GENIE BPC mutations data set — genie_mut","title":"An example GENIE BPC mutations data set — genie_mut","text":"set created sample 100 patients non-small cell lung cancer v.2.0-public data set. row exists given hugo symbol tumor-sample-barcode, mutation observed.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_mut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example GENIE BPC mutations data set — genie_mut","text":"","code":"genie_mut"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/genie_mut.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example GENIE BPC mutations data set — genie_mut","text":"data frame mutations retrieved using genieBPC package","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggcomut.html","id":null,"dir":"Reference","previous_headings":"","what":"Comutation Heatmap of the Top Altered Genes — ggcomut","title":"Comutation Heatmap of the Top Altered Genes — ggcomut","text":"Comutation Heatmap Top Altered Genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggcomut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comutation Heatmap of the Top Altered Genes — ggcomut","text":"","code":"ggcomut(mutation, n_genes = 10, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggcomut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comutation Heatmap of the Top Altered Genes — ggcomut","text":"mutation Raw mutation dataframe containing alteration data n_genes Number top genes display plot ... create_gene_binary() arguments","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggcomut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comutation Heatmap of the Top Altered Genes — ggcomut","text":"Comutation heatmap top genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggcomut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comutation Heatmap of the Top Altered Genes — ggcomut","text":"","code":"ggcomut(mutation = gnomeR::mutations) #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix."},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gggenecor.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation Heatmap of the Top Altered Genes — gggenecor","title":"Correlation Heatmap of the Top Altered Genes — gggenecor","text":"Correlation Heatmap Top Altered Genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gggenecor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation Heatmap of the Top Altered Genes — gggenecor","text":"","code":"gggenecor(mutation, n_genes = 10, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gggenecor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation Heatmap of the Top Altered Genes — gggenecor","text":"mutation Raw mutation dataframe containing alteration data n_genes Number top genes display plot ... create_gene_binary() arguments","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gggenecor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation Heatmap of the Top Altered Genes — gggenecor","text":"Correlation heatmap top altered genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gggenecor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation Heatmap of the Top Altered Genes — gggenecor","text":"","code":"gggenecor(gnomeR::mutations) #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix."},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggsamplevar.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of Variants Per Sample Colored By Variant Classification — ggsamplevar","title":"Histogram of Variants Per Sample Colored By Variant Classification — ggsamplevar","text":"Histogram Variants Per Sample Colored Variant Classification","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggsamplevar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of Variants Per Sample Colored By Variant Classification — ggsamplevar","text":"","code":"ggsamplevar(mutation)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggsamplevar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of Variants Per Sample Colored By Variant Classification — ggsamplevar","text":"mutation Raw mutation dataframe containing alteration data","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggsamplevar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram of Variants Per Sample Colored By Variant Classification — ggsamplevar","text":"Histogram counts variants per tumor sample","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggsamplevar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram of Variants Per Sample Colored By Variant Classification — ggsamplevar","text":"","code":"ggsamplevar(gnomeR::mutations)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggtopgenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of Most Frequently Altered Genes — ggtopgenes","title":"Barplot of Most Frequently Altered Genes — ggtopgenes","text":"Barplot Frequently Altered Genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggtopgenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of Most Frequently Altered Genes — ggtopgenes","text":"","code":"ggtopgenes(mutation, n_genes = 10)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggtopgenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of Most Frequently Altered Genes — ggtopgenes","text":"mutation Raw mutation dataframe containing alteration data n_genes Number top genes display plot","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggtopgenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of Most Frequently Altered Genes — ggtopgenes","text":"Barplot counts top variant genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggtopgenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of Most Frequently Altered Genes — ggtopgenes","text":"","code":"ggtopgenes(gnomeR::mutations)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvarclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of Variant Classification Counts — ggvarclass","title":"Barplot of Variant Classification Counts — ggvarclass","text":"Barplot Variant Classification Counts","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvarclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of Variant Classification Counts — ggvarclass","text":"","code":"ggvarclass(mutation)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvarclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of Variant Classification Counts — ggvarclass","text":"mutation Raw mutation dataframe containing alteration data","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvarclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of Variant Classification Counts — ggvarclass","text":"Barplot counts variant classification","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvarclass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of Variant Classification Counts — ggvarclass","text":"","code":"ggvarclass(gnomeR::mutations)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvartype.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of Variant Type Counts — ggvartype","title":"Barplot of Variant Type Counts — ggvartype","text":"Barplot Variant Type Counts","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvartype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of Variant Type Counts — ggvartype","text":"","code":"ggvartype(mutation)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvartype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of Variant Type Counts — ggvartype","text":"mutation Raw mutation dataframe containing alteration data","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvartype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of Variant Type Counts — ggvartype","text":"Barplot counts variant type","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/ggvartype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of Variant Type Counts — ggvartype","text":"","code":"ggvartype(gnomeR::mutations)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomeR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gnomeR: Wrangle and analyze IMPACT and TCGA mutation data — gnomeR-package","title":"gnomeR: Wrangle and analyze IMPACT and TCGA mutation data — gnomeR-package","text":"Prepare raw mutation, cna, fusion data analysis. Annotate OncoKB, summarize maf files, visualize results .","code":""},{"path":[]},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomeR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gnomeR: Wrangle and analyze IMPACT and TCGA mutation data — gnomeR-package","text":"Maintainer: Karissa Whiting karissa.whiting@gmail.com (ORCID) Authors: Michael Curry (ORCID) Hannah Fuchs (ORCID) Axel Martin axel.steph.martin@gmail.com (ORCID) Arshi Arora","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"List of suggested color palettes for when you need a large palette — gnomer_colors","title":"List of suggested color palettes for when you need a large palette — gnomer_colors","text":"Sometimes just need huge palette fairly distinguishable colors. named vector Ronglai-approved colors good things like TCGA PanCan (33 cancer types) clustering solutions high K. Run gnomer_colors see hex codes study colors.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of suggested color palettes for when you need a large palette — gnomer_colors","text":"","code":"gnomer_colors"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_colors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of suggested color palettes for when you need a large palette — gnomer_colors","text":"object class character length 66.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Access the colors in a gnomeR color palette — gnomer_palette","title":"Access the colors in a gnomeR color palette — gnomer_palette","text":"gnomeR colors can accessed used plotting","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access the colors in a gnomeR color palette — gnomer_palette","text":"","code":"gnomer_palette(   name = \"pancan\",   n,   type = c(\"discrete\", \"continuous\"),   plot_col = FALSE,   reverse = FALSE,   ... )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access the colors in a gnomeR color palette — gnomer_palette","text":"name Name desired palette, supplied quotes. Choices : \"pancan\" (default) (best discrete), \"main\" (better discrete), \"sunset\" (continuous) n Number colors desired. omitted, uses colors, needed number colors less total. type Either \"continuous\" \"discrete\". Use continuous want automatically interpolate colours. plot_col Boolean value weather plot palette labeled hex codes. Defalut FALSE. reverse Boolean indicating whether palette reversed. Default FALSE. ... Additional parameters pass grDevices::colorRampPalette @importFrom graphics rgb rect par image text @importFrom grDevices colorRampPalette","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access the colors in a gnomeR color palette — gnomer_palette","text":"vector colours.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access the colors in a gnomeR color palette — gnomer_palette","text":"","code":"library(ggplot2)  # Print a plot showing the colors in a palette, in order gnomer_palette(\"pancan\") #>  [1] \"#67000D\" \"#A50F15\" \"#EF3B2C\" \"#FC9272\" \"#FEE0D2\" \"#BCBDDC\" \"#807DBA\" #>  [8] \"#54278F\" \"#3F007D\" \"#08306B\" \"#08519C\" \"#4292C6\" \"#9ECAE1\" \"#000000\" #> [15] \"#525252\" \"#969696\" \"#BDBDBD\" \"#D9D9D9\" \"#80CDC1\" \"#35978F\" \"#01665E\" #> [22] \"#006D2C\" \"#41AB5D\" \"#A1D99B\" \"#FFFFCC\" \"#FED976\" \"#FD8D3C\" \"#8C510A\" #> [29] \"#BF812D\" \"#DFC27D\" \"#FA9FB5\" \"#F768A1\" \"#DD3497\"  # use a single brand color from a palette # here using the fourth color from the \"pancan\" palette ggplot(mtcars, aes(hp, mpg)) + geom_point(size = 4, color = gnomer_palette(\"pancan\")[4])   # use a discrete color scale - uses fixed colors from the requested palette ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species)) + geom_point(size = 4) + scale_color_manual(values = gnomer_palette(\"pancan\"))   # use a continuous color scale - interpolates between colors ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Sepal.Length)) + geom_point(size = 4, alpha = .6) + scale_color_gradientn(colors = gnomer_palette(\"sunset\", type = \"continuous\"))   # use a fill color ggplot(iris, aes(x = Sepal.Length, fill = Species)) + geom_histogram(bins = 20, position = \"dodge\") + scale_fill_manual(values = gnomer_palette(\"pancan\"))"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete list of gnomeR color palettes — gnomer_palettes","title":"Complete list of gnomeR color palettes — gnomer_palettes","text":"Creates color palettes based gnomeR colors, including \"main\" collection 33 pale-yet-distinct colors flow nicely (good clustering solutions, example), \"pancan\" collection 33 vibrant distinct colors, good visualizing 33 TCGA PanCan cancer types.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete list of gnomeR color palettes — gnomer_palettes","text":"","code":"gnomer_palettes"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Complete list of gnomeR color palettes — gnomer_palettes","text":"object class list length 3.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/gnomer_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete list of gnomeR color palettes — gnomer_palettes","text":"","code":"gnomer_palettes[[\"pancan\"]] #>  [1] \"#67000D\" \"#A50F15\" \"#EF3B2C\" \"#FC9272\" \"#FEE0D2\" \"#BCBDDC\" \"#807DBA\" #>  [8] \"#54278F\" \"#3F007D\" \"#08306B\" \"#08519C\" \"#4292C6\" \"#9ECAE1\" \"#000000\" #> [15] \"#525252\" \"#969696\" \"#BDBDBD\" \"#D9D9D9\" \"#80CDC1\" \"#35978F\" \"#01665E\" #> [22] \"#006D2C\" \"#41AB5D\" \"#A1D99B\" \"#FFFFCC\" \"#FED976\" \"#FD8D3C\" \"#8C510A\" #> [29] \"#BF812D\" \"#DFC27D\" \"#FA9FB5\" \"#F768A1\" \"#DD3497\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/impact_alias_table.html","id":null,"dir":"Reference","previous_headings":"","what":"IMPACT Alias Tables — impact_alias_table","title":"IMPACT Alias Tables — impact_alias_table","text":"Data frame genes aliases IMPACT panel genes. used gene name resolution functionality.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/impact_alias_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMPACT Alias Tables — impact_alias_table","text":"","code":"impact_alias_table"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/impact_alias_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMPACT Alias Tables — impact_alias_table","text":"data frame 1658 rows hugo_symbol gene Hugo Symbol alias Alias Hugo Symbol hugo_symbol column entrez_id entrez ID gene hugo_symbol alias_entrez_id entrez ID alias gene","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutation_viz.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a set of plot summarising a mutation file. — mutation_viz","title":"Creates a set of plot summarising a mutation file. — mutation_viz","text":"Creates set plot summarising mutation file.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutation_viz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a set of plot summarising a mutation file. — mutation_viz","text":"","code":"mutation_viz(mutation, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutation_viz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a set of plot summarising a mutation file. — mutation_viz","text":"mutation Raw mutation dataframe containing alteration data ... argument belonging gene_binary method","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutation_viz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a set of plot summarising a mutation file. — mutation_viz","text":"Returns list following plots: varclass Barplot counts variant classification vartype Barplot counts variant type snvclass Histogram counts SNV class samplevar Histogram counts variants per patient topgenes Barplot counts top variant genes genecor Correlation heatmap top 10 genes","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutation_viz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a set of plot summarising a mutation file. — mutation_viz","text":"","code":"mutation_viz(gnomeR::mutations) #> ℹ `samples` argument is `NULL`. We will infer your cohort inclusion and resulting data frame will include all samples with at least one alteration in mutation, fusion or cna data frames #> ! 7 mutations have `NA` or blank in mutation status column instead of 'SOMATIC' or 'GERMLINE'. These were assumed to be 'SOMATIC' and were retained in the resulting binary matrix. #> $varclass  #>  #> $vartype  #>  #> $samplevar  #>  #> $topgenes  #>  #> $genecor  #>"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"An example IMPACT cBioPortal mutation data set in API format — mutations","title":"An example IMPACT cBioPortal mutation data set in API format — mutations","text":"set contains random sample 200 patients publicly available prostate cancer data cBioPortal. file API format.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example IMPACT cBioPortal mutation data set in API format — mutations","text":"","code":"mutations"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example IMPACT cBioPortal mutation data set in API format — mutations","text":"data frame mutations Abida et al. JCO Precis Oncol 2017. Retrieved cBioPortal.725 observations 29 variables. hugoGeneSymbol Character w/ 324 levels, Column containing HUGO symbols genes entrezGeneId Entrez Gene ID sampleId MSKCC Sample ID patientId Patient ID studyId Indicator Abida et al. 2017 study center Cancer Center ID mutationStatus Somatic germ-line mutation status variantType Mutation variant type chr Chromosome mutation observed endPosition End Position fisValue fisValue functionalImpactScore functionalImpactScore keyword keyword linkMsa linkMsa linkPdb linkPdb linkXvar linkXvar molecularProfileId molecularProfileId mutationType mutationType ncbiBuild ncbiBuild proteinChange proteinChange proteinPosEnd proteinPosEnd proteinPosStart proteinPosStart referenceAllele referenceAllele refseqMrnaId refseqMrnaId startPosition startPosition uniquePatientKey uniquePatientKey uniqueSampleKey uniqueSampleKey validationStatus validationStatus variantAllele variantAllele","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/mutations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example IMPACT cBioPortal mutation data set in API format — mutations","text":"https://www.cbioportal.org/study/summary?id=prad_mskcc_2017","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/names_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Frame of Column Names — names_df","title":"Data Frame of Column Names — names_df","text":"Data frame accepted data names standard genomic files. serves dictionary help disambiguate raw column names user entered mutation, CNA structural variant data","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/names_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Frame of Column Names — names_df","text":"","code":"names_df"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/names_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data Frame of Column Names — names_df","text":"data frame maf_column_name data field names appear common MAF file api_column_name data field names appear common cBioPortal API retrieved files mutation_input field appear mutation files? fusion_input field appear mutation/sv files? cna_input field appear CNA files? definition variable definition notes data notes sc_maf_column_name snake case version maf_column_name sc_api_column_name snake case version api_column_name internal_column_name name used field internal processing functions","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pathways.html","id":null,"dir":"Reference","previous_headings":"","what":"IMPACT Oncogenic Signaling Pathways — pathways","title":"IMPACT Oncogenic Signaling Pathways — pathways","text":"Oncogenic Signaling Pathways curated Sanchez-Vega, F et al., 2018. See cBioPortal.org information","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMPACT Oncogenic Signaling Pathways — pathways","text":"","code":"pathways"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pathways.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IMPACT Oncogenic Signaling Pathways — pathways","text":"list common cancer pathways associated alterations pathway name pathway genes vector gene alterations pathways","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pathways.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"IMPACT Oncogenic Signaling Pathways — pathways","text":"Sanchez-Vega, F., Mina, M., Armenia, J., Chatila, W. K., Luna, ., La, K. C., Dimitriadoy, S., Liu, D. L., Kantheti, H. S., Saghafinia, S., Chakravarty, D., Daian, F., Gao, Q., Bailey, M. H., Liang, W. W., Foltz, S. M., Shmulevich, ., Ding, L., Heins, Z., Ochoa, ., … Schultz, N. (2018). Oncogenic Signaling Pathways Cancer Genome Atlas. Cell, 173(2), 321–337.e10. https://doi.org/10.1016/j.cell.2018.03.035","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_longer.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat Wide CNA Data to Long — pivot_cna_longer","title":"Reformat Wide CNA Data to Long — pivot_cna_longer","text":"Takes numeric vector CNA data wide format column sample row hugo symbol. Function return long format CNA data set just events (neutral/diploid instances filtered ) recode events numeric descriptive (-2/-1/-1.5 deletion, 2/1 amplification).","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_longer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat Wide CNA Data to Long — pivot_cna_longer","text":"","code":"pivot_cna_longer(wide_cna, clean_sample_ids = TRUE)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_longer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat Wide CNA Data to Long — pivot_cna_longer","text":"wide_cna cna dataframe wide format (e.g. gnomeR::cna) clean_sample_ids TRUE default function clean sample_id field replace \".\" \"-\". FALSE, modification made returned sample_ids field","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_longer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat Wide CNA Data to Long — pivot_cna_longer","text":"long data frame CNA events","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_longer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reformat Wide CNA Data to Long — pivot_cna_longer","text":"","code":"cna <- pivot_cna_longer(wide_cna = gnomeR::cna_wide) #> ! Replacing all `.` to `-` in sample_id field (e.g. `P.0001930.T01.IM3` -> `P-0001930-T01-IM3`). #> To prevent this, use argument `clean_sample_ids = FALSE`"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_wider.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot CNA from maf (long) version to wide version — pivot_cna_wider","title":"Pivot CNA from maf (long) version to wide version — pivot_cna_wider","text":"Pivot CNA maf (long) version wide version","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_wider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot CNA from maf (long) version to wide version — pivot_cna_wider","text":"","code":"pivot_cna_wider(cna)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_wider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot CNA from maf (long) version to wide version — pivot_cna_wider","text":"cna cna dataframe maf (long) format","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_wider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot CNA from maf (long) version to wide version — pivot_cna_wider","text":"dataframe reformatted CNA alteration (wide format)","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/pivot_cna_wider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot CNA from maf (long) version to wide version — pivot_cna_wider","text":"","code":"cna_long <- data.frame(     sampleId = c(\"P-0001276-T01-IM3\",\"P-0001276-T01-IM3\",                  \"P-0005436-T01-IM3\",                  \"P-0001276-T01-IM3\",\"P-0003333-T01-IM3\"),     Hugo_Symbol = c(\"MLL2\",\"KMT2D\",\"HIST1H2BD\",                     \"HIST1H3B\",\"KDR\"),     alteration = c(\"AMPLIFICATION\",\"AMPLIFICATION\",                    \"AMPLIFICATION\",\"AMPLIFICATION\",\"DELETION\"))  cna <- pivot_cna_wider(cna_long)   cna_long <- data.frame(     sampleId = c(\"P-0001276-T01-IM3\",\"P-0001276-T01-IM3\",                  \"P-0005436-T01-IM3\",                  \"P-0001276-T01-IM3\",\"P-0003333-T01-IM3\"),     Hugo_Symbol = c(\"MLL2\",\"KMT2D\",\"HIST1H2BD\",                     \"HIST1H3B\",\"KDR\"),     alteration = c(2, 2, -1, 1, -2))  cna <- pivot_cna_wider(cna_long)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Hugo Symbol Column — recode_alias","title":"Recode Hugo Symbol Column — recode_alias","text":"Searches Hugo Symbol column genomic dataframe look genes common gene name aliases, replaces aliases accepted (recent) gene name. Function uses gnomeR::impact_alias_table default reference aliases replace supports IMPACT panel alias replacement time. Custom tables can provided long hugo_symbol alias columns exist.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Hugo Symbol Column — recode_alias","text":"","code":"recode_alias(genomic_df, alias_table = \"impact\")"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_alias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Hugo Symbol Column — recode_alias","text":"genomic_df gene_binary object alias_table string indicating \"impact\",  dataframe least two columns (hugo_symbol, alias) one row pair.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_alias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Hugo Symbol Column — recode_alias","text":"dataframe recoded Hugo Symbol columns","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_alias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Hugo Symbol Column — recode_alias","text":"","code":"mut <- rename_columns(gnomeR::mutations[1:5, ]) mut$hugo_symbol #> [1] \"PARP1\" \"PARP1\" \"PARP1\" \"AKT1\"  \"AKT1\"   alias_table <- data.frame(\"hugo_symbol\" = c(\"New Symbol\", \"New Symbol2\"), \"alias\" = c(\"PARP1\", \"AKT1\"))  recode_alias(mut, alias_table) #> Warning: To ensure gene with multiple names/aliases are correctly grouped together, the #> following genes in your dataframe have been recoded (if you are running #> `create_gene_binary()` you can prevent this with `alias_table = FALSE`): #> ! PARP1 recoded to New Symbol #> ! AKT1 recoded to New Symbol2 #> # A tibble: 5 × 29 #>   hugo_symbol entrez_gene_id uniqueSampleKey                    uniquePatientKey #>   <chr>                <int> <chr>                              <chr>            #> 1 New Symbol             142 UC0wMDAxMTI4LVQwMS1JTTM6cHJhZF9tc… UC0wMDAxMTI4OnB… #> 2 New Symbol             142 UC0wMDAxODU5LVQwMS1JTTM6cHJhZF9tc… UC0wMDAxODU5OnB… #> 3 New Symbol             142 UC0wMDAxODk1LVQwMS1JTTM6cHJhZF9tc… UC0wMDAxODk1OnB… #> 4 New Symbol2            207 UC0wMDAxMTI4LVQwMS1JTTM6cHJhZF9tc… UC0wMDAxMTI4OnB… #> 5 New Symbol2            207 UC0wMDAxODQ1LVQwMS1JTTM6cHJhZF9tc… UC0wMDAxODQ1OnB… #> # ℹ 25 more variables: molecular_profile_id <chr>, sample_id <chr>, #> #   patient_id <chr>, study_id <chr>, center <chr>, mutation_status <chr>, #> #   validation_status <chr>, start_position <int>, end_position <int>, #> #   reference_allele <chr>, hgv_sp_short <chr>, variant_classification <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbi_build <chr>, variant_type <chr>, keyword <chr>, #> #   chromosome <chr>, allele <chr>, refseqMrnaId <chr>, …"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","title":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","text":"Internal function recode numeric CNA alteration values factor values","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","text":"","code":"recode_cna(alteration_vector)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","text":"alteration_vector vector CNA alterations coded following levels: neutral, deletion, amplification, gain, loss, homozygous deletion, hemizygous deletion, loh, gain, high level amplification, 0, -1, -1.5, -2, 1, 2.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_cna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","text":"recoded CNA data set factor alteration values. See details code dictionary","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_cna.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","text":"CNA coded following key based key: values \"neutral\":  \"0\", \"neutral\", \"deletion\": \"homozygous deletion\", \"-2\", \"deletion\": \"loh\", \"-1.5\", \"deletion\": \"hemizygous deletion\", \"-1\", \"amplification\": \"gain\", \"1\", \"amplification\": high level amplification\", \"2\",","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/recode_cna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function to recode numeric CNA alteration values to factor values — recode_cna","text":"","code":"recode_cna(gnomeR::cna$alteration[1:10]) #>  [1] deletion      amplification deletion      amplification deletion      #>  [6] deletion      deletion      deletion      deletion      amplification #> Levels: deletion amplification"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>% scales show_col","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reformat_fusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Enables users to reformat fusions files so that each fusion is listed as one row with two hugo-symbol\nsites instead of two rows, one for each site. This is the required format for the create_gene_binary function. — reformat_fusion","title":"Enables users to reformat fusions files so that each fusion is listed as one row with two hugo-symbol\nsites instead of two rows, one for each site. This is the required format for the create_gene_binary function. — reformat_fusion","text":"Enables users reformat fusions files fusion listed one row two hugo-symbol sites instead two rows, one site. required format create_gene_binary function.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reformat_fusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enables users to reformat fusions files so that each fusion is listed as one row with two hugo-symbol\nsites instead of two rows, one for each site. This is the required format for the create_gene_binary function. — reformat_fusion","text":"","code":"reformat_fusion(fusions)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reformat_fusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enables users to reformat fusions files so that each fusion is listed as one row with two hugo-symbol\nsites instead of two rows, one for each site. This is the required format for the create_gene_binary function. — reformat_fusion","text":"fusions data frame fusion/structural variants occur cohort. sample_id, hugo_symbol, fusion column minimum. Intragenic/intergenic fusions one row. two gene fusions two rows. See gnomeR::sv_long example.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reformat_fusion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enables users to reformat fusions files so that each fusion is listed as one row with two hugo-symbol\nsites instead of two rows, one for each site. This is the required format for the create_gene_binary function. — reformat_fusion","text":"data frame sample_id, site1hugo_symbol, site2hugo_symbol fusion columns. match format gnomeR::sv dataset.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reformat_fusion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enables users to reformat fusions files so that each fusion is listed as one row with two hugo-symbol\nsites instead of two rows, one for each site. This is the required format for the create_gene_binary function. — reformat_fusion","text":"","code":"sv_long1 <- gnomeR::sv_long %>%   rename_columns() %>%   reformat_fusion()  head(sv_long1) #> # A tibble: 6 × 6 #>   sample_id  site1hugo_symbol site2hugo_symbol site3hugo_symbol site4hugo_symbol #>   <chr>      <chr>            <chr>            <chr>            <chr>            #> 1 GENIE-MSK… MYD88            OXSR1            NA               NA               #> 2 GENIE-MSK… RB1              NA               NA               NA               #> 3 GENIE-MSK… ANKRD11          NA               NA               NA               #> 4 GENIE-MSK… CD74             ROS1             NA               NA               #> 5 GENIE-MSK… FBN2             RAD50            NA               NA               #> 6 GENIE-MSK… CDCA8            FANCA            NA               NA               #> # ℹ 1 more variable: fusion <chr>"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/rename_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns from API results to work with gnomeR functions — rename_columns","title":"Rename columns from API results to work with gnomeR functions — rename_columns","text":"Rename columns API results work gnomeR functions","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/rename_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns from API results to work with gnomeR functions — rename_columns","text":"","code":"rename_columns(df_to_check)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/rename_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns from API results to work with gnomeR functions — rename_columns","text":"df_to_check data frame check recode names needed","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/rename_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns from API results to work with gnomeR functions — rename_columns","text":"renamed data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/rename_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns from API results to work with gnomeR functions — rename_columns","text":"","code":"rename_columns(df_to_check = gnomeR::mutations) #> # A tibble: 725 × 29 #>    hugo_symbol entrez_gene_id uniqueSampleKey                   uniquePatientKey #>    <chr>                <int> <chr>                             <chr>            #>  1 PARP1                  142 UC0wMDAxMTI4LVQwMS1JTTM6cHJhZF9t… UC0wMDAxMTI4OnB… #>  2 PARP1                  142 UC0wMDAxODU5LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODU5OnB… #>  3 PARP1                  142 UC0wMDAxODk1LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODk1OnB… #>  4 AKT1                   207 UC0wMDAxMTI4LVQwMS1JTTM6cHJhZF9t… UC0wMDAxMTI4OnB… #>  5 AKT1                   207 UC0wMDAxODQ1LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODQ1OnB… #>  6 AKT1                   207 UC0wMDA1NTcwLVQwMS1JTTU6cHJhZF9t… UC0wMDA1NTcwOnB… #>  7 ALK                    238 UC0wMDAxNzY4LVQwMS1JTTM6cHJhZF9t… UC0wMDAxNzY4OnB… #>  8 ALK                    238 UC0wMDA0NTA4LVQwMS1JTTU6cHJhZF9t… UC0wMDA0NTA4OnB… #>  9 ALK                    238 UC0wMDAxODk1LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODk1OnB… #> 10 ALK                    238 UC0wMDAyOTg0LVQwMS1JTTM6cHJhZF9t… UC0wMDAyOTg0OnB… #> # ℹ 715 more rows #> # ℹ 25 more variables: molecular_profile_id <chr>, sample_id <chr>, #> #   patient_id <chr>, study_id <chr>, center <chr>, mutation_status <chr>, #> #   validation_status <chr>, start_position <int>, end_position <int>, #> #   reference_allele <chr>, hgv_sp_short <chr>, variant_classification <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbi_build <chr>, variant_type <chr>, keyword <chr>, … rename_columns(df_to_check = gnomeR::sv) #> # A tibble: 94 × 44 #>    uniqueSampleKey    uniquePatientKey molecular_profile_id sample_id patient_id #>    <chr>              <chr>            <chr>                <chr>     <chr>      #>  1 UC0wMDAyMzA0LVQwM… UC0wMDAyMzA0OnB… prad_mskcc_2017_str… P-000230… P-0002304  #>  2 UC0wMDAyMzA0LVQwM… UC0wMDAyMzA0OnB… prad_mskcc_2017_str… P-000230… P-0002304  #>  3 UC0wMDAzOTI1LVQwM… UC0wMDAzOTI1OnB… prad_mskcc_2017_str… P-000392… P-0003925  #>  4 UC0wMDAyMzY0LVQwM… UC0wMDAyMzY0OnB… prad_mskcc_2017_str… P-000236… P-0002364  #>  5 UC0wMDAyMzc1LVQwM… UC0wMDAyMzc1OnB… prad_mskcc_2017_str… P-000237… P-0002375  #>  6 UC0wMDAzOTA4LVQwM… UC0wMDAzOTA4OnB… prad_mskcc_2017_str… P-000390… P-0003908  #>  7 UC0wMDAyNTE2LVQwM… UC0wMDAyNTE2OnB… prad_mskcc_2017_str… P-000251… P-0002516  #>  8 UC0wMDAyNTE2LVQwM… UC0wMDAyNTE2OnB… prad_mskcc_2017_str… P-000251… P-0002516  #>  9 UC0wMDAwMzc3LVQwM… UC0wMDAwMzc3OnB… prad_mskcc_2017_str… P-000037… P-0000377  #> 10 UC0wMDAwMzc3LVQwM… UC0wMDAwMzc3OnB… prad_mskcc_2017_str… P-000037… P-0000377  #> # ℹ 84 more rows #> # ℹ 39 more variables: study_id <chr>, site_1_entrez_gene_id <int>, #> #   site_1_hugo_symbol <chr>, site_1_ensembl_transcript_id <chr>, #> #   site_1_chromosome <chr>, site_1_position <int>, site_1_contig <chr>, #> #   site_1_region <chr>, site_1_region_number <int>, site_1_description <chr>, #> #   site_2_entrez_gene_id <int>, site_2_hugo_symbol <chr>, #> #   site_2_ensembl_transcript_id <chr>, site_2_chromosome <chr>, …"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reset_gnomer_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset gnomeR color palette — reset_gnomer_palette","title":"Reset gnomeR color palette — reset_gnomer_palette","text":"function resets gnomeR color palette back ggplot2 default palette ggplot2 objects. typical workflow include call set_gnomer_palette() function longer needed, subsequent calls ggplot() utilize default color palette ggplot2.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reset_gnomer_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset gnomeR color palette — reset_gnomer_palette","text":"","code":"reset_gnomer_palette(env = rlang::caller_env())"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reset_gnomer_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset gnomeR color palette — reset_gnomer_palette","text":"env environment palette take effect. Default rlang::caller_env().","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reset_gnomer_palette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reset gnomeR color palette — reset_gnomer_palette","text":"Michael Curry","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/reset_gnomer_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset gnomeR color palette — reset_gnomer_palette","text":"","code":"library(ggplot2)  set_gnomer_palette()  ggplot(mtcars, aes(wt, mpg, color = factor(cyl))) +   geom_point()   reset_gnomer_palette() #default reset ggplot(mtcars, aes(wt, mpg, color = factor(cyl))) +   geom_point()"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/resolve_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve Hugo Symbol Names with Aliases — resolve_alias","title":"Resolve Hugo Symbol Names with Aliases — resolve_alias","text":"Resolve Hugo Symbol Names Aliases","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/resolve_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve Hugo Symbol Names with Aliases — resolve_alias","text":"","code":"resolve_alias(gene_to_check, alias_table)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/resolve_alias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve Hugo Symbol Names with Aliases — resolve_alias","text":"gene_to_check hugo_symbol check alias_table table containing aliases","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/resolve_alias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve Hugo Symbol Names with Aliases — resolve_alias","text":"accepted hugo symbol input, returned back. alias name provided, common name/date name returned","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/resolve_alias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve Hugo Symbol Names with Aliases — resolve_alias","text":"","code":"resolve_alias(\"MLL4\", alias_table = impact_alias_table) #> [1] \"KMT2B\""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_cna_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check CNA data frame to ensure columns are correct — sanitize_cna_input","title":"Check CNA data frame to ensure columns are correct — sanitize_cna_input","text":"Check CNA data frame ensure columns correct","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_cna_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check CNA data frame to ensure columns are correct — sanitize_cna_input","text":"","code":"sanitize_cna_input(cna, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_cna_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check CNA data frame to ensure columns are correct — sanitize_cna_input","text":"cna cna data frame ... arguments passed create_gene_binary()","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_cna_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check CNA data frame to ensure columns are correct — sanitize_cna_input","text":"checked data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_cna_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check CNA data frame to ensure columns are correct — sanitize_cna_input","text":"","code":"cna <- sanitize_cna_input(cna = cna)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_fusion_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check fusion data frame to ensure columns are correct — sanitize_fusion_input","title":"Check fusion data frame to ensure columns are correct — sanitize_fusion_input","text":"Check fusion data frame ensure columns correct","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_fusion_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check fusion data frame to ensure columns are correct — sanitize_fusion_input","text":"","code":"sanitize_fusion_input(fusion, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_fusion_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check fusion data frame to ensure columns are correct — sanitize_fusion_input","text":"fusion fusion data frame ... arguments passed create_gene_binary()","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_fusion_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check fusion data frame to ensure columns are correct — sanitize_fusion_input","text":"checked data frame","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_fusion_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check fusion data frame to ensure columns are correct — sanitize_fusion_input","text":"","code":"fus <- sanitize_fusion_input(fusion = gnomeR::sv)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_mutation_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks MAF input to ensure column names are correct and renamed genes are corrected — sanitize_mutation_input","title":"Checks MAF input to ensure column names are correct and renamed genes are corrected — sanitize_mutation_input","text":"Checks MAF input ensure column names correct renamed genes corrected","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_mutation_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks MAF input to ensure column names are correct and renamed genes are corrected — sanitize_mutation_input","text":"","code":"sanitize_mutation_input(mutation, include_silent, ...)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_mutation_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks MAF input to ensure column names are correct and renamed genes are corrected — sanitize_mutation_input","text":"mutation Raw maf dataframe containing alteration data include_silent Silent mutations removed FALSE (default). Variant classification column needed. ... arguments passed create_gene_binary() (recode.aliases).","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_mutation_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks MAF input to ensure column names are correct and renamed genes are corrected — sanitize_mutation_input","text":"corrected maf file error problems maf","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sanitize_mutation_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks MAF input to ensure column names are correct and renamed genes are corrected — sanitize_mutation_input","text":"","code":"sanitize_mutation_input(mutation = gnomeR::mutations, include_silent = FALSE) #> # A tibble: 725 × 29 #>    hugo_symbol entrez_gene_id uniqueSampleKey                   uniquePatientKey #>    <chr>                <int> <chr>                             <chr>            #>  1 PARP1                  142 UC0wMDAxMTI4LVQwMS1JTTM6cHJhZF9t… UC0wMDAxMTI4OnB… #>  2 PARP1                  142 UC0wMDAxODU5LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODU5OnB… #>  3 PARP1                  142 UC0wMDAxODk1LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODk1OnB… #>  4 AKT1                   207 UC0wMDAxMTI4LVQwMS1JTTM6cHJhZF9t… UC0wMDAxMTI4OnB… #>  5 AKT1                   207 UC0wMDAxODQ1LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODQ1OnB… #>  6 AKT1                   207 UC0wMDA1NTcwLVQwMS1JTTU6cHJhZF9t… UC0wMDA1NTcwOnB… #>  7 ALK                    238 UC0wMDAxNzY4LVQwMS1JTTM6cHJhZF9t… UC0wMDAxNzY4OnB… #>  8 ALK                    238 UC0wMDA0NTA4LVQwMS1JTTU6cHJhZF9t… UC0wMDA0NTA4OnB… #>  9 ALK                    238 UC0wMDAxODk1LVQwMS1JTTM6cHJhZF9t… UC0wMDAxODk1OnB… #> 10 ALK                    238 UC0wMDAyOTg0LVQwMS1JTTM6cHJhZF9t… UC0wMDAyOTg0OnB… #> # ℹ 715 more rows #> # ℹ 25 more variables: molecular_profile_id <chr>, sample_id <chr>, #> #   patient_id <chr>, study_id <chr>, center <chr>, mutation_status <chr>, #> #   validation_status <chr>, start_position <int>, end_position <int>, #> #   reference_allele <chr>, hgv_sp_short <chr>, variant_classification <chr>, #> #   functionalImpactScore <chr>, fisValue <dbl>, linkXvar <chr>, linkPdb <chr>, #> #   linkMsa <chr>, ncbi_build <chr>, variant_type <chr>, keyword <chr>, …"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/seg.html","id":null,"dir":"Reference","previous_headings":"","what":"A segmentation file from the cbioPortal datasets — seg","title":"A segmentation file from the cbioPortal datasets — seg","text":"Segmentation file provided processing IMPACT sequencing using FACETS","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/seg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A segmentation file from the cbioPortal datasets — seg","text":"","code":"seg"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/seg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A segmentation file from the cbioPortal datasets — seg","text":"data frame 30240 observations 6 variables ID Factor, IMPACT sample ID chrom chromosome loc.start start location loc.end end location num.mark number probes bins covered segment seg.mean segment mean value, usually log2 scale","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/seg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A segmentation file from the cbioPortal datasets — seg","text":"https://cbioportal.mskcc.org/","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/set_gnomer_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Set gnomeR color palette — set_gnomer_palette","title":"Set gnomeR color palette — set_gnomer_palette","text":"function sets gnomeR color palette default palette ggplot2 objects. overriding following four functions ggplot2 package: scale_color_discrete(), scale_fill_discrete(), scale_color_continuous(), scale_fill_continuous(), places specified environment. typical workflow include function top script, subsequent calls ggplot() utilize gnomeR color palette.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/set_gnomer_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set gnomeR color palette — set_gnomer_palette","text":"","code":"set_gnomer_palette(   palette = c(\"pancan\", \"main\", \"sunset\"),   gradient = c(\"pancan\", \"main\", \"sunset\"),   reverse = FALSE,   env = rlang::caller_env() )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/set_gnomer_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set gnomeR color palette — set_gnomer_palette","text":"palette name palette gnomer_palettes, supplied quotes. Options include \"pancan\", \"main\", \"sunset\". Default \"pancan\". gradient name gradient palette gnomer_palettes, supplied quotes. Options include \"pancan\", \"main\", \"sunset\". Default \"pancan\". reverse set TRUE, reverse order color palette env environment palette take effect. Default rlang::caller_env().","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/set_gnomer_palette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set gnomeR color palette — set_gnomer_palette","text":"Michael Curry","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/set_gnomer_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set gnomeR color palette — set_gnomer_palette","text":"","code":"library(ggplot2)  set_gnomer_palette()  ggplot(mtcars, aes(wt, mpg, color = factor(cyl))) +   geom_point()   # setting other gnomeR palettes set_gnomer_palette(palette = \"main\", gradient = \"sunset\")  ggplot(mtcars, aes(wt, mpg, color = factor(cyl))) +   geom_point()   ggplot(mtcars, aes(wt, mpg, color = cyl)) +   geom_point()"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/specify_impact_panels.html","id":null,"dir":"Reference","previous_headings":"","what":"IMPACT Panel Annotation of NA's — specify_impact_panels","title":"IMPACT Panel Annotation of NA's — specify_impact_panels","text":"IMPACT Panel Annotation NA's","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/specify_impact_panels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IMPACT Panel Annotation of NA's — specify_impact_panels","text":"","code":"specify_impact_panels(gene_binary)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/specify_impact_panels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IMPACT Panel Annotation of NA's — specify_impact_panels","text":"gene_binary processed gene_binary","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/specify_impact_panels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IMPACT Panel Annotation of NA's — specify_impact_panels","text":"data frame iwth NAs inserted genes tested given panel versions","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/subset_by_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a Binary Matrix By Alteration Frequency Threshold — subset_by_frequency","title":"Subset a Binary Matrix By Alteration Frequency Threshold — subset_by_frequency","text":"Subset Binary Matrix Alteration Frequency Threshold","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/subset_by_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a Binary Matrix By Alteration Frequency Threshold — subset_by_frequency","text":"","code":"subset_by_frequency(gene_binary, t = 0.1, other_vars = NULL)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/subset_by_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a Binary Matrix By Alteration Frequency Threshold — subset_by_frequency","text":"gene_binary data frame row sample column alteration. Data frame must sample_id column columns alteration values 0, 1 NA. t Threshold value 0 1 subset . Default 10% (.1). other_vars One column names (quoted unquoted) data retained resulting data frame. Default NULL.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/subset_by_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a Binary Matrix By Alteration Frequency Threshold — subset_by_frequency","text":"data frame sample_id column columns alterations given prevalence threshold t.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/subset_by_frequency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a Binary Matrix By Alteration Frequency Threshold — subset_by_frequency","text":"","code":"samples <- unique(gnomeR::mutations$sampleId)  gene_binary <- create_gene_binary(    samples = samples, mutation = mutations, cna = cna,    mut_type = \"somatic_only\",    include_silent = FALSE,    specify_panel = \"impact\"  ) gene_binary %>%  subset_by_frequency() #> # A tibble: 200 × 7 #>    sample_id          TP53 FOXA1 AR.Amp  SPOP PTEN.Del KMT2C #>    <chr>             <dbl> <dbl>  <dbl> <dbl>    <dbl> <dbl> #>  1 P-0001128-T01-IM3     1     0      0     0        0     0 #>  2 P-0001859-T01-IM3     0     0      1     0        0     0 #>  3 P-0001895-T01-IM3     0     0      0     1        0     0 #>  4 P-0001845-T01-IM3     0     0      0     0        0     1 #>  5 P-0001768-T01-IM3     1     0      0     0        0     0 #>  6 P-0002984-T01-IM3     1     0      1     0        0     0 #>  7 P-0000964-T02-IM3     0     0      0     0        0     0 #>  8 P-0000964-T01-IM3     0     0      0     0        0     0 #>  9 P-0000610-T01-IM3     1     0      0     0        1     0 #> 10 P-0001247-T01-IM3     1     0      1     0        0     0 #> # ℹ 190 more rows"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/summarize_by_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify binary matrix to one column per gene that counts any alteration type as 1 — summarize_by_gene","title":"Simplify binary matrix to one column per gene that counts any alteration type as 1 — summarize_by_gene","text":"reduce number columns binary matrix, resulting data frame 1 col per gene, opposed separate columns mutation/cna/fusion.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/summarize_by_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify binary matrix to one column per gene that counts any alteration type as 1 — summarize_by_gene","text":"","code":"summarize_by_gene(gene_binary)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/summarize_by_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify binary matrix to one column per gene that counts any alteration type as 1 — summarize_by_gene","text":"gene_binary 0/1 matrix gene alterations","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/summarize_by_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify binary matrix to one column per gene that counts any alteration type as 1 — summarize_by_gene","text":"binary matrix row sample one column per gene","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/summarize_by_gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify binary matrix to one column per gene that counts any alteration type as 1 — summarize_by_gene","text":"","code":"samples <- unique(gnomeR::mutations$sampleId)[1:10] gene_binary <- create_gene_binary(   samples = samples, mutation = mutations, cna = cna,   mut_type = \"somatic_only\",   include_silent = FALSE,   specify_panel = \"IMPACT341\" ) %>%   summarize_by_gene()"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv.html","id":null,"dir":"Reference","previous_headings":"","what":"An example IMPACT cBioPortal mutation data set in API format — sv","title":"An example IMPACT cBioPortal mutation data set in API format — sv","text":"set created random sample 200 patients publicly available prostate cancer data cBioPortal. file API format.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example IMPACT cBioPortal mutation data set in API format — sv","text":"","code":"sv"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example IMPACT cBioPortal mutation data set in API format — sv","text":"data frame structural variants Abida et al. JCO Precis Oncol 2017. Retrieved cBioPortal.94 observations 29 variables. data frame 94 rows 44 variables: uniqueSampleKey character COLUMN_DESCRIPTION uniquePatientKey character COLUMN_DESCRIPTION molecularProfileId character COLUMN_DESCRIPTION sampleId MSKCC Sample ID patientId Patient ID studyId Indicator Abida et al. 2017 study site1EntrezGeneId integer COLUMN_DESCRIPTION site1HugoSymbol Character w/ 31 levels, Column containing HUGO symbols genes first site fusion site1EnsemblTranscriptId character COLUMN_DESCRIPTION site1Chromosome character COLUMN_DESCRIPTION site1Position integer COLUMN_DESCRIPTION site1Contig character COLUMN_DESCRIPTION site1Region character COLUMN_DESCRIPTION site1RegionNumber integer COLUMN_DESCRIPTION site1Description character COLUMN_DESCRIPTION site2EntrezGeneId integer COLUMN_DESCRIPTION site2HugoSymbol Character w/ 21 levels, Column containing HUGO symbols genes second site fusion site2EnsemblTranscriptId character COLUMN_DESCRIPTION site2Chromosome character COLUMN_DESCRIPTION site2Position integer COLUMN_DESCRIPTION site2Contig character COLUMN_DESCRIPTION site2Region character COLUMN_DESCRIPTION site2RegionNumber integer COLUMN_DESCRIPTION site2Description character COLUMN_DESCRIPTION site2EffectOnFrame character COLUMN_DESCRIPTION ncbiBuild character COLUMN_DESCRIPTION dnaSupport Factor, yes data rnaSupport Factor, unknown data normalReadCount integer COLUMN_DESCRIPTION tumorReadCount integer COLUMN_DESCRIPTION normalVariantCount integer COLUMN_DESCRIPTION tumorVariantCount integer COLUMN_DESCRIPTION normalPairedEndReadCount integer COLUMN_DESCRIPTION tumorPairedEndReadCount integer COLUMN_DESCRIPTION normalSplitReadCount integer COLUMN_DESCRIPTION tumorSplitReadCount integer COLUMN_DESCRIPTION annotation character COLUMN_DESCRIPTION breakpointType character COLUMN_DESCRIPTION connectionType character COLUMN_DESCRIPTION eventInfo character COLUMN_DESCRIPTION variantClass character COLUMN_DESCRIPTION length integer COLUMN_DESCRIPTION comments character COLUMN_DESCRIPTION svStatus character COLUMN_DESCRIPTION","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example IMPACT cBioPortal mutation data set in API format — sv","text":"https://www.cbioportal.org/study/summary?id=prad_mskcc_2017","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv_long.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of long-format fusion/sv files — sv_long","title":"An example of long-format fusion/sv files — sv_long","text":"set created sample 30 patients publicly available non-small cell lung cancer data GENIEBPC (cohort = 'NSCLC', version = 'v2.0-public')","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example of long-format fusion/sv files — sv_long","text":"","code":"sv_long"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv_long.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example of long-format fusion/sv files — sv_long","text":"data frame 30 unique sample_id values 62 hugo symbols listed","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/sv_long.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An example of long-format fusion/sv files — sv_long","text":"https://www.aacr.org/professionals/research/aacr-project-genie/bpc/","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/tbl_genomic.html","id":null,"dir":"Reference","previous_headings":"","what":"tbl_genomic — tbl_genomic","title":"tbl_genomic — tbl_genomic","text":"function select genes based user inputs frequency counts pass data.frame gtsummary::tbl_summary(). can specify variable parameters accepted gtsummary::tbl_summary(). Note variable must merged onto data using parameter function.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/tbl_genomic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tbl_genomic — tbl_genomic","text":"","code":"tbl_genomic(   gene_binary,   by = NULL,   freq_cutoff = deprecated(),   freq_cutoff_by_gene = deprecated(),   gene_subset = deprecated(),   ... )"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/tbl_genomic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tbl_genomic — tbl_genomic","text":"gene_binary data.frame genetic samples variable passed gtsummary::tbl_summary()'s parameter freq_cutoff deprecated freq_cutoff_by_gene deprecated gene_subset deprecated ... Additional parameters can passed gtsummary::tbl_summary(). access additional parameters need load gtsummary.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/tbl_genomic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tbl_genomic — tbl_genomic","text":"tbl_summary() object","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/tbl_genomic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tbl_genomic — tbl_genomic","text":"","code":"samples <- unique(mutations$sampleId)[1:10]  gene_binary <- create_gene_binary(   samples = samples,   mutation = gnomeR::mutations,   cna = gnomeR::cna,   mut_type = \"somatic_only\", snp_only = FALSE,   specify_panel = \"no\" )  tbl1 <- tbl_genomic(gene_binary)  # Example wth `by` variable  gene_binary$sex <- sample( c(\"M\", \"F\"), size = nrow(gene_binary), replace = TRUE)  tbl2 <- tbl_genomic(   gene_binary = gene_binary,   by = sex ) %>% gtsummary::add_p() %>% gtsummary::add_q() #> add_q: Adjusting p-values with #> `stats::p.adjust(x$table_body$p.value, method = \"fdr\")`"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/which_impact_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"provide a list of impact panels a provided gene is found within — which_impact_panel","title":"provide a list of impact panels a provided gene is found within — which_impact_panel","text":"provide list impact panels provided gene found within","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/which_impact_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"provide a list of impact panels a provided gene is found within — which_impact_panel","text":"","code":"which_impact_panel(hugo_symbol)"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/which_impact_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"provide a list of impact panels a provided gene is found within — which_impact_panel","text":"hugo_symbol vector hugo symbols","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/which_impact_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"provide a list of impact panels a provided gene is found within — which_impact_panel","text":"data frame hugo symbols IMPACT panels included","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/reference/which_impact_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"provide a list of impact panels a provided gene is found within — which_impact_panel","text":"","code":"hugos <- unique(gnomeR::mutations$hugoGeneSymbol)[1:10]  which_impact_panel(hugos) #> # A tibble: 10 × 5 #>    genes_in_panel IMPACT341 IMPACT410 IMPACT468 IMPACT505 #>    <chr>          <chr>     <chr>     <chr>     <chr>     #>  1 AKT1           yes       yes       yes       yes       #>  2 ALK            yes       yes       yes       yes       #>  3 APC            yes       yes       yes       yes       #>  4 AR             yes       yes       yes       yes       #>  5 ARAF           yes       yes       yes       yes       #>  6 ATM            yes       yes       yes       yes       #>  7 ATR            yes       yes       yes       yes       #>  8 PARP1          yes       yes       yes       yes       #>  9 RHOA           yes       yes       yes       yes       #> 10 ZFHX3          no        yes       yes       yes"},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/news/index.html","id":"gnomer-development-version","dir":"Changelog","previous_headings":"","what":"gnomeR (development version)","title":"gnomeR (development version)","text":"Deprecated freq_cutoff, freq_cutoff_by_gene, gene_subset arguments tbl_genomic(). now recommended users use subset_by_frequency() instead passing data tbl_genomic(). Added other_vars argument subset_by_frequency() allow retention clinical vars using function within pipeline. Deprecated count_pathways_by argument add_pathways() function. Now, user must specify specific alteration count towards pathway via .mut, .Amp, .Del, .fus suffix (e.g. custom_pathways = c('TP53.mut', 'APC.Del)). Added IMPACT QA Vignette GENIE BPC vignette","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/news/index.html","id":"gnomer-120","dir":"Changelog","previous_headings":"","what":"gnomeR 1.2.0","title":"gnomeR 1.2.0","text":"Updated color palette functionality Column sample ID now returned data frame resulting create_gene_binary() summarize_by_gene() function changed run faster (#259) subset_by_frequency() added allow users filter specific prevalence levels mutations/alterations/fusions (#270) Removed oncoKB functionality (moving {oncokbR} package) Fixed bugs tbl_genomic() create_gene_binary(). Added data processing tutorial vignette","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/news/index.html","id":"gnomer-111","dir":"Changelog","previous_headings":"","what":"gnomeR 1.1.1","title":"gnomeR 1.1.1","text":"Package overhauled including main binary matrix functions. pre-v2 release made internal workshop taught using version functions. Final/stable versions functions available v2.0.0.","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/news/index.html","id":"gnomer-110","dir":"Changelog","previous_headings":"","what":"gnomeR 1.1.0","title":"gnomeR 1.1.0","text":"Major changes come. code written pre 3/23/2022 use release","code":""},{"path":"https://mskcc-epi-bio.github.io/gnomeR/dev/news/index.html","id":"gnomer-0009000","dir":"Changelog","previous_headings":"","what":"gnomeR 0.0.0.9000","title":"gnomeR 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
