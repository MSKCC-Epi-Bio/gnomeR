% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create-protein-change-binary.R
\name{create_protein_change_binary}
\alias{create_protein_change_binary}
\title{Create a binary matrix of protein changes in samples}
\usage{
create_protein_change_binary(
  mutation,
  samples = NULL,
  gene = NULL,
  protein.change = NULL
)
}
\arguments{
\item{mutation}{A data frame of mutation information in MAF format. Required columns
are sample IDs, genes, and protein change names.}

\item{samples}{A character vector specifying the samples to be included in the output matrix.
Default is NULL in which case the function will return all the samples found in the mutation file.
If you specify a vector of samples that contain samples not in the mutation data frame, the samples
missing from the data file will be removed from the result.}

\item{gene}{A character vector specifying the target gene(s). Default is NULL and
protein changes found in any genes in the mutation file will be returned.}

\item{protein.change}{A character vector specifying the protein change(s).
Default is NULL and function will return all protein changes in the genes.}
}
\value{
A binary protein change data frame (rows are samples and columns are
protein changes). The columns names are in the form of \verb{<hugoSymbol>_<proteinChange>}.

Values in the data frame are binary indicators \code{1} (present) and \code{0} (absent).
}
\description{
\code{create_protein_change_binary()} enables creation of a binary matrix of
individual protein changes from a mutation file with a predefined list of
samples (rows are samples and columns are protein changes).
}
\examples{
library(gnomeR)
all <- create_protein_change_binary(mutation = gnomeR::mutations)

gene <- c('EGFR','TP53')

double.mut <- create_gene_binary(
 mutation = gnomeR::mutations, gene = gene
)

}
